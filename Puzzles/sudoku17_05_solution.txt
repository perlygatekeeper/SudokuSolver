puzzle_string: 000000012008030000000000040120500000000004700060000000507000300000620000000100000
==== Pass 1 ====
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '     3 |       '       '       |       '       '       |  
  1 | 4   6 ' 4 5   ' 4 5 6 | 4     ' 4 5 6 '   5 6 |   5 6 '   1   '   2   |  
    | 7   9 ' 7   9 '     9 | 7 8 9 ' 7 8 9 ' 7 8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   ' 1     '       |   2   '       ' 1 2   |       '       '       |  
  2 | 4   6 ' 4 5   '   8   | 4     '   3   '   5 6 |   5 6 '   5 6 '   5 6 |  
    | 7   9 ' 7   9 '       | 7   9 '       ' 7   9 |     9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 ' 1   3 ' 1 2 3 |   2   ' 1     ' 1 2   |       '       '     3 |  
  3 |     6 '   5   '   5 6 |       '   5 6 '   5 6 |   5 6 '   4   '   5 6 |  
    | 7   9 ' 7   9 '     9 | 7 8 9 ' 7 8 9 ' 7 8 9 |   8 9 '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '     3 |       '       '     3 |       '     3 '     3 |  
  4 |   1   '   2   ' 4     |   5   '     6 '     6 | 4   6 '     6 ' 4   6 |  
    |       '       '     9 |       ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |   2 3 ' 1     '       |       '   2 3 ' 1   3 |  
  5 |       '   5   '   5   |       '     6 '   4   |   7   '   5 6 '   5 6 |  
    |   8 9 '   8 9 '     9 |   8 9 '   8 9 '       |       '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '       '     3 |   2 3 ' 1     ' 1 2 3 | 1 2   '   2 3 ' 1   3 |  
  6 | 4     '   6   ' 4 5   |       '       '       | 4 5   '   5   ' 4 5   |  
    | 7 8 9 '       '     9 | 7 8 9 ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       ' 1     '       |       '       '       |       '   2   ' 1     |  
  7 |   5   ' 4     '   7   | 4     ' 4     '       |   3   '     6 ' 4   6 |  
    |       '   8 9 '       |   8 9 '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 ' 1   3 ' 1   3 |       '       '     3 | 1     '       ' 1     |  
  8 | 4     ' 4     ' 4     |   6   '   2   '   5   | 4 5   '   5   ' 4 5   |  
    |   8 9 '   8 9 '     9 |       '       ' 7 8 9 |   8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '     3 '   2 3 |       '       '     3 |   2   '   2   '       |  
  9 | 4   6 ' 4     ' 4   6 |   1   ' 4 5   '   5   | 4 5 6 '   5 6 ' 4 5 6 |  
    |   8 9 '   8 9 '     9 |       ' 7 8 9 ' 7 8 9 |   8 9 ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
Looking for Singletons (cells with only one possible value left) :
Found and set 0 cells this singletons search pass.

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 3, 9, 3 ) to 3
Lone in Box    Setting cell ( 6, 1, 4 ) to 7
Lone in Row    Setting cell ( 7, 8, 9 ) to 2
Lone in Column Setting cell ( 6, 7, 6 ) to 2
Found and set 5 cells this lone representatives search pass.

So far we filled this many cells: 21
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '     3 |       '       '       |       '       '       |  
  1 | 4   6 ' 4 5   ' 4 5 6 | 4     ' 4 5 6 '   5 6 |   5 6 '   1   '   2   |  
    |     9 ' 7   9 '     9 | 7 8 9 ' 7 8 9 ' 7 8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   ' 1     '       |   2   '       ' 1 2   |       '       '       |  
  2 | 4   6 ' 4 5   '   8   | 4     '   3   '   5 6 |   5 6 '   5 6 '   5 6 |  
    |     9 ' 7   9 '       | 7   9 '       ' 7   9 |     9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   ' 1     ' 1 2   |   2   ' 1     ' 1 2   |       '       '       |  
  3 |     6 '   5   '   5 6 |       '   5 6 '   5 6 |   5 6 '   4   '   3   |  
    |     9 ' 7   9 '     9 | 7 8 9 ' 7 8 9 ' 7 8 9 |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '     3 |       '       '     3 |       '     3 '       |  
  4 |   1   '   2   ' 4     |   5   '     6 '     6 | 4   6 '     6 ' 4   6 |  
    |       '       '     9 |       ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |   2 3 ' 1     '       |       '     3 ' 1     |  
  5 |       '   5   '   5   |       '     6 '   4   |   7   '   5 6 '   5 6 |  
    |   8 9 '   8 9 '     9 |   8 9 '   8 9 '       |       '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '     3 |     3 ' 1     ' 1   3 |       '     3 ' 1     |  
  6 |   7   '   6   ' 4 5   |       '       '       |   2   '   5   ' 4 5   |  
    |       '       '     9 |   8 9 '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       ' 1     '       |       '       '       |       '       ' 1     |  
  7 |   5   ' 4     '   7   | 4     ' 4     '       |   3   '   2   ' 4   6 |  
    |       '   8 9 '       |   8 9 '   8 9 '   8 9 |       '       '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 ' 1   3 ' 1   3 |       '       '     3 | 1     '       ' 1     |  
  8 | 4     ' 4     ' 4     |   6   '   2   '   5   | 4 5   '   5   ' 4 5   |  
    |   8 9 '   8 9 '     9 |       '       ' 7 8 9 |   8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '     3 '   2 3 |       '       '     3 |       '       '       |  
  9 | 4   6 ' 4     ' 4   6 |   1   ' 4 5   '   5   | 4 5 6 '   5 6 ' 4 5 6 |  
    |   8 9 '   8 9 '     9 |       ' 7 8 9 ' 7 8 9 |   8 9 ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 5, 4, 5 ) to 2
Lone in Row    Setting cell ( 7, 9, 9 ) to 6
Lone in Column Setting cell ( 8, 7, 9 ) to 1
Lone in Column Setting cell ( 6, 4, 5 ) to 3
Found and set 6 cells this lone representatives search pass.

So far we filled this many cells: 25
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '     3 |       '       '       |       '       '       |  
  1 | 4   6 ' 4 5   ' 4 5 6 | 4     ' 4 5 6 '   5 6 |   5 6 '   1   '   2   |  
    |     9 ' 7   9 '     9 | 7 8 9 ' 7 8 9 ' 7 8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   ' 1     '       |       '       ' 1 2   |       '       '       |  
  2 | 4   6 ' 4 5   '   8   | 4     '   3   '   5 6 |   5 6 '   5 6 '   5   |  
    |     9 ' 7   9 '       | 7   9 '       ' 7   9 |     9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   ' 1     ' 1 2   |       ' 1     ' 1 2   |       '       '       |  
  3 |     6 '   5   '   5 6 |       '   5 6 '   5 6 |   5 6 '   4   '   3   |  
    |     9 ' 7   9 '     9 | 7 8 9 ' 7 8 9 ' 7 8 9 |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '     3 |       '       '       |       '     3 '       |  
  4 |   1   '   2   ' 4     |   5   '     6 '     6 | 4   6 '     6 ' 4     |  
    |       '       '     9 |       ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       ' 1     '       |       '     3 ' 1     |  
  5 |       '   5   '   5   |   2   '     6 '   4   |   7   '   5 6 '   5   |  
    |   8 9 '   8 9 '     9 |       '   8 9 '       |       '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     ' 1     |       '       ' 1     |  
  6 |   7   '   6   ' 4 5   |   3   '       '       |   2   '   5   ' 4 5   |  
    |       '       '     9 |       '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       ' 1     '       |       '       '       |       '       '       |  
  7 |   5   ' 4     '   7   | 4     ' 4     '       |   3   '   2   '   6   |  
    |       '   8 9 '       |   8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '     3 |       '       '       |  
  8 | 4     ' 4     ' 4     |   6   '   2   '   5   |   1   '   5   ' 4 5   |  
    |   8 9 '   8 9 '     9 |       '       ' 7 8 9 |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '     3 '   2 3 |       '       '     3 |       '       '       |  
  9 | 4   6 ' 4     ' 4   6 |   1   ' 4 5   '   5   | 4 5   '   5   ' 4 5   |  
    |   8 9 '   8 9 '     9 |       ' 7 8 9 ' 7 8 9 |   8 9 ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 7, 2, 7 ) to 1
Lone in Row    Setting cell ( 2, 6, 2 ) to 1
Lone in Column Setting cell ( 3, 3, 1 ) to 1
Lone in Column Setting cell ( 3, 6, 2 ) to 2
Found and set 6 cells this lone representatives search pass.

So far we filled this many cells: 29
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '     3 |       '       '       |       '       '       |  
  1 | 4   6 ' 4 5   ' 4 5 6 | 4     ' 4 5 6 '   5 6 |   5 6 '   1   '   2   |  
    |     9 ' 7   9 '     9 | 7 8 9 ' 7 8 9 ' 7 8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '       |       '       '       |       '       '       |  
  2 | 4   6 ' 4 5   '   8   | 4     '   3   '   1   |   5 6 '   5 6 '   5   |  
    |     9 ' 7   9 '       | 7   9 '       '       |     9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |     6 '   5   '   1   |       '   5 6 '   2   |   5 6 '   4   '   3   |  
    |     9 ' 7   9 '       | 7 8 9 ' 7 8 9 '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '     3 |       '       '       |       '     3 '       |  
  4 |   1   '   2   ' 4     |   5   '     6 '     6 | 4   6 '     6 ' 4     |  
    |       '       '     9 |       ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       ' 1     '       |       '     3 ' 1     |  
  5 |       '   5   '   5   |   2   '     6 '   4   |   7   '   5 6 '   5   |  
    |   8 9 '   8 9 '     9 |       '   8 9 '       |       '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     '       |       '       ' 1     |  
  6 |   7   '   6   ' 4 5   |   3   '       '       |   2   '   5   ' 4 5   |  
    |       '       '     9 |       '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   | 4     ' 4     '       |   3   '   2   '   6   |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '     3 |       '       '       |  
  8 | 4     ' 4     ' 4     |   6   '   2   '   5   |   1   '   5   ' 4 5   |  
    |   8 9 '   8 9 '     9 |       '       ' 7 8 9 |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '     3 '   2 3 |       '       '     3 |       '       '       |  
  9 | 4   6 ' 4     ' 4   6 |   1   ' 4 5   '   5   | 4 5   '   5   ' 4 5   |  
    |   8 9 '   8 9 '     9 |       ' 7 8 9 ' 7 8 9 |   8 9 ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 2, 1, 1 ) to 2
Lone in Row    Setting cell ( 9, 3, 7 ) to 2
Lone in Column Setting cell ( 1, 3, 1 ) to 6
Found and set 4 cells this lone representatives search pass.

So far we filled this many cells: 32
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |       '       '       |       '       '       |  
  1 | 4     ' 4 5   '   6   | 4     ' 4 5   '   5   |   5   '   1   '   2   |  
    |     9 ' 7   9 '       | 7 8 9 ' 7 8 9 ' 7 8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   ' 4 5   '   8   | 4     '   3   '   1   |   5 6 '   5 6 '   5   |  
    |       ' 7   9 '       | 7   9 '       '       |     9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |       '   5   '   1   |       '   5 6 '   2   |   5 6 '   4   '   3   |  
    |     9 ' 7   9 '       | 7 8 9 ' 7 8 9 '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '     3 |       '       '       |       '     3 '       |  
  4 |   1   '   2   ' 4     |   5   '     6 '     6 | 4   6 '     6 ' 4     |  
    |       '       '     9 |       ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       ' 1     '       |       '     3 ' 1     |  
  5 |       '   5   '   5   |   2   '     6 '   4   |   7   '   5 6 '   5   |  
    |   8 9 '   8 9 '     9 |       '   8 9 '       |       '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     '       |       '       ' 1     |  
  6 |   7   '   6   ' 4 5   |   3   '       '       |   2   '   5   ' 4 5   |  
    |       '       '     9 |       '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   | 4     ' 4     '       |   3   '   2   '   6   |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '     3 |       '       '       |  
  8 | 4     ' 4     ' 4     |   6   '   2   '   5   |   1   '   5   ' 4 5   |  
    |   8 9 '   8 9 '     9 |       '       ' 7 8 9 |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '       |       '       '     3 |       '       '       |  
  9 | 4   6 ' 4     '   2   |   1   ' 4 5   '   5   | 4 5   '   5   ' 4 5   |  
    |   8 9 '   8 9 '       |       ' 7 8 9 ' 7 8 9 |   8 9 ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 3, 5, 2 ) to 6
Lone in Box    Setting cell ( 9, 1, 7 ) to 6
Lone in Row    Setting cell ( 5, 8, 6 ) to 6
Lone in Column Setting cell ( 4, 6, 5 ) to 6
Lone in Column Setting cell ( 2, 7, 3 ) to 6
Lone in Column Setting cell ( 4, 8, 6 ) to 3
Found and set 9 cells this lone representatives search pass.

So far we filled this many cells: 38
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |       '       '       |       '       '       |  
  1 | 4     ' 4 5   '   6   | 4     ' 4 5   '   5   |   5   '   1   '   2   |  
    |     9 ' 7   9 '       | 7 8 9 ' 7 8 9 ' 7 8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   ' 4 5   '   8   | 4     '   3   '   1   |   6   '   5   '   5   |  
    |       ' 7   9 '       | 7   9 '       '       |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |       '   5   '   1   |       '   6   '   2   |   5   '   4   '   3   |  
    |     9 ' 7   9 '       | 7 8 9 '       '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   1   '   2   ' 4     |   5   '       '   6   | 4     '   3   ' 4     |  
    |       '       '     9 |       ' 7 8 9 '       |   8 9 '       '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       ' 1     '       |       '       ' 1     |  
  5 |       '   5   '   5   |   2   '       '   4   |   7   '   6   '   5   |  
    |   8 9 '   8 9 '     9 |       '   8 9 '       |       '       '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     '       |       '       ' 1     |  
  6 |   7   '   6   ' 4 5   |   3   '       '       |   2   '   5   ' 4 5   |  
    |       '       '     9 |       '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   | 4     ' 4     '       |   3   '   2   '   6   |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '     3 |       '       '       |  
  8 | 4     ' 4     ' 4     |   6   '   2   '   5   |   1   '   5   ' 4 5   |  
    |   8 9 '   8 9 '     9 |       '       ' 7 8 9 |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       '       '     3 |       '       '       |  
  9 |   6   ' 4     '   2   |   1   ' 4 5   '   5   | 4 5   '   5   ' 4 5   |  
    |       '   8 9 '       |       ' 7 8 9 ' 7 8 9 |   8 9 ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 4, 5, 5 ) to 7
Found and set 1 cells this lone representatives search pass.

So far we filled this many cells: 39
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |       '       '       |       '       '       |  
  1 | 4     ' 4 5   '   6   | 4     ' 4 5   '   5   |   5   '   1   '   2   |  
    |     9 ' 7   9 '       | 7 8 9 '   8 9 ' 7 8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   ' 4 5   '   8   | 4     '   3   '   1   |   6   '   5   '   5   |  
    |       ' 7   9 '       | 7   9 '       '       |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |       '   5   '   1   |       '   6   '   2   |   5   '   4   '   3   |  
    |     9 ' 7   9 '       | 7 8 9 '       '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   1   '   2   ' 4     |   5   '   7   '   6   | 4     '   3   ' 4     |  
    |       '       '     9 |       '       '       |   8 9 '       '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       ' 1     '       |       '       ' 1     |  
  5 |       '   5   '   5   |   2   '       '   4   |   7   '   6   '   5   |  
    |   8 9 '   8 9 '     9 |       '   8 9 '       |       '       '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     '       |       '       ' 1     |  
  6 |   7   '   6   ' 4 5   |   3   '       '       |   2   '   5   ' 4 5   |  
    |       '       '     9 |       '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   | 4     ' 4     '       |   3   '   2   '   6   |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '     3 |       '       '       |  
  8 | 4     ' 4     ' 4     |   6   '   2   '   5   |   1   '   5   ' 4 5   |  
    |   8 9 '   8 9 '     9 |       '       ' 7 8 9 |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       '       '     3 |       '       '       |  
  9 |   6   ' 4     '   2   |   1   ' 4 5   '   5   | 4 5   '   5   ' 4 5   |  
    |       '   8 9 '       |       '   8 9 ' 7 8 9 |   8 9 ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Found and set 0 cells this lone representatives search pass.

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Imaginary value of 5 found in Box 1 all in col 2...   removing it from the cell ( 5, 2, 4 ).
Imaginary value of 5 found in Box 2 all in row 1...   removing it from the cell ( 1, 2, 1 ).
Imaginary value of 5 found in Box 2 all in row 1...   removing it from the cell ( 1, 7, 3 ).
Imaginary value of 7 found in Box 3 all in row 2...   removing it from the cell ( 2, 2, 1 ).
Imaginary value of 7 found in Box 3 all in row 2...   removing it from the cell ( 2, 4, 2 ).
Imaginary value of 8 found in Box 3 all in col 7...   removing it from the cell ( 4, 7, 6 ).
Imaginary value of 8 found in Box 3 all in col 7...   removing it from the cell ( 9, 7, 9 ).
Imaginary value of 4 found in Box 4 all in col 3...   removing it from the cell ( 8, 3, 7 ).
Imaginary value of 8 found in Box 4 all in row 5...   removing it from the cell ( 5, 5, 5 ).
Imaginary value of 8 found in Box 4 all in row 5...   removing it from the cell ( 5, 9, 6 ).
Imaginary value of 7 found in Box 8 all in col 6...   removing it from the cell ( 1, 6, 2 ).
Imaginary value of 4 found in Row 7...   removing it from the cell ( 9, 5, 8 ).
Imaginary value of 8 found in Row 7...   removing it from the cell ( 8, 6, 8 ).
Imaginary value of 8 found in Row 7...   removing it from the cell ( 9, 5, 8 ).
Imaginary value of 8 found in Row 7...   removing it from the cell ( 9, 6, 8 ).
Imaginary value of 9 found in Row 7...   removing it from the cell ( 8, 6, 8 ).
Imaginary value of 9 found in Row 7...   removing it from the cell ( 9, 5, 8 ).
Imaginary value of 9 found in Row 7...   removing it from the cell ( 9, 6, 8 ).
Found and removed 18 possible values from cells via imaginary numbers.

So far we filled this many cells: 39
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |       '       '       |       '       '       |  
  1 | 4     ' 4     '   6   | 4     ' 4 5   '   5   |       '   1   '   2   |  
    |     9 ' 7   9 '       | 7 8 9 '   8 9 '   8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   ' 4 5   '   8   | 4     '   3   '   1   |   6   '   5   '   5   |  
    |       '     9 '       |     9 '       '       |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |       '   5   '   1   |       '   6   '   2   |   5   '   4   '   3   |  
    |     9 ' 7   9 '       | 7 8 9 '       '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   1   '   2   ' 4     |   5   '   7   '   6   | 4     '   3   ' 4     |  
    |       '       '     9 |       '       '       |     9 '       '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       ' 1     '       |       '       ' 1     |  
  5 |       '       '   5   |   2   '       '   4   |   7   '   6   '   5   |  
    |   8 9 '   8 9 '     9 |       '     9 '       |       '       '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     '       |       '       ' 1     |  
  6 |   7   '   6   ' 4 5   |   3   '       '       |   2   '   5   ' 4 5   |  
    |       '       '     9 |       '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   | 4     ' 4     '       |   3   '   2   '   6   |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '     3 |       '       '       |  
  8 | 4     ' 4     '       |   6   '   2   '   5   |   1   '   5   ' 4 5   |  
    |   8 9 '   8 9 '     9 |       '       ' 7     |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       '       '     3 |       '       '       |  
  9 |   6   ' 4     '   2   |   1   '   5   '   5   | 4 5   '   5   ' 4 5   |  
    |       '   8 9 '       |       '       ' 7     |     9 ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end imaginary values method ----

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Imaginary value of 8 found in Box 5 all in row 6...   removing it from the cell ( 6, 8, 6 ).
Imaginary value of 8 found in Box 5 all in row 6...   removing it from the cell ( 6, 9, 6 ).
Imaginary value of 8 found in Col 8...   removing it from the cell ( 8, 9, 9 ).
Imaginary value of 8 found in Col 8...   removing it from the cell ( 9, 9, 9 ).
Found and removed 4 possible values from cells via imaginary numbers.

So far we filled this many cells: 39
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |       '       '       |       '       '       |  
  1 | 4     ' 4     '   6   | 4     ' 4 5   '   5   |       '   1   '   2   |  
    |     9 ' 7   9 '       | 7 8 9 '   8 9 '   8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   ' 4 5   '   8   | 4     '   3   '   1   |   6   '   5   '   5   |  
    |       '     9 '       |     9 '       '       |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |       '   5   '   1   |       '   6   '   2   |   5   '   4   '   3   |  
    |     9 ' 7   9 '       | 7 8 9 '       '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   1   '   2   ' 4     |   5   '   7   '   6   | 4     '   3   ' 4     |  
    |       '       '     9 |       '       '       |     9 '       '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       ' 1     '       |       '       ' 1     |  
  5 |       '       '   5   |   2   '       '   4   |   7   '   6   '   5   |  
    |   8 9 '   8 9 '     9 |       '     9 '       |       '       '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     '       |       '       ' 1     |  
  6 |   7   '   6   ' 4 5   |   3   '       '       |   2   '   5   ' 4 5   |  
    |       '       '     9 |       '   8 9 '   8 9 |       '     9 '     9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   | 4     ' 4     '       |   3   '   2   '   6   |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '     3 |       '       '       |  
  8 | 4     ' 4     '       |   6   '   2   '   5   |   1   '   5   ' 4 5   |  
    |   8 9 '   8 9 '     9 |       '       ' 7     |       ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       '       '     3 |       '       '       |  
  9 |   6   ' 4     '   2   |   1   '   5   '   5   | 4 5   '   5   ' 4 5   |  
    |       '   8 9 '       |       '       ' 7     |     9 ' 7 8 9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end imaginary values method ----

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Found and removed 0 possible values from cells via imaginary numbers.

Looking for Naked Pairs, any two cells with the same
pair of possible values that exist in the same cluster [row column or box]):
Naked pair in col 6, rows 6 and 7 leads to 8 being removed from cell ( 1, 6, 2 ).
Naked pair in col 6, rows 6 and 7 leads to 9 being removed from cell ( 1, 6, 2 ).
Naked pair in row 4, cols 3 and 7 leads to 4 being removed from cell ( 4, 9, 6 ).
Naked pair in row 4, cols 3 and 7 leads to 9 being removed from cell ( 4, 9, 6 ).
Found and processed 4 naked pairs.

So far we filled this many cells: 39
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |       '       '       |       '       '       |  
  1 | 4     ' 4     '   6   | 4     ' 4 5   '   5   |       '   1   '   2   |  
    |     9 ' 7   9 '       | 7 8 9 '   8 9 '       |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   ' 4 5   '   8   | 4     '   3   '   1   |   6   '   5   '   5   |  
    |       '     9 '       |     9 '       '       |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |       '   5   '   1   |       '   6   '   2   |   5   '   4   '   3   |  
    |     9 ' 7   9 '       | 7 8 9 '       '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   1   '   2   ' 4     |   5   '   7   '   6   | 4     '   3   '       |  
    |       '       '     9 |       '       '       |     9 '       '   8   |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       ' 1     '       |       '       ' 1     |  
  5 |       '       '   5   |   2   '       '   4   |   7   '   6   '   5   |  
    |   8 9 '   8 9 '     9 |       '     9 '       |       '       '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     '       |       '       ' 1     |  
  6 |   7   '   6   ' 4 5   |   3   '       '       |   2   '   5   ' 4 5   |  
    |       '       '     9 |       '   8 9 '   8 9 |       '     9 '     9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   | 4     ' 4     '       |   3   '   2   '   6   |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '     3 |       '       '       |  
  8 | 4     ' 4     '       |   6   '   2   '   5   |   1   '   5   ' 4 5   |  
    |   8 9 '   8 9 '     9 |       '       ' 7     |       ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       '       '     3 |       '       '       |  
  9 |   6   ' 4     '   2   |   1   '   5   '   5   | 4 5   '   5   ' 4 5   |  
    |       '   8 9 '       |       '       ' 7     |     9 ' 7 8 9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end naked pairs method ----

Looking for Naked Pairs, any two cells with the same
pair of possible values that exist in the same cluster [row column or box]):
Found and processed 0 naked pairs.

Looking for Hidden Pairs, (any two candidate values which exist 
only in the same two cells in a given cluster):
---- find_hidden_pairs: Start all possibility counts ------
2 col6:4
2 col6:5
2 col6:8
4 col6:9
---- find_hidden_pairs: End   all possibility counts ------
Hidden pair (box): comparing candadate values box0:3 and box0:5.
Hidden pair (box): comparing candadate values box0:3 and box0:7.
Hidden pair (box): comparing candadate values box0:5 and box0:7.
Hidden pair (box): comparing candadate values box1:5 and box1:7.
Hidden pair (box): comparing candadate values box2:7 and box2:8.
Hidden pair (box): comparing candadate values box3:4 and box3:5.
Hidden pair (box): comparing candadate values box3:4 and box3:8.
Hidden pair (box): comparing candadate values box3:5 and box3:8.
Hidden pair (box): comparing candadate values box4:1 and box4:8.
Hidden pair (box): comparing candadate values box5:1 and box5:4.
Hidden pair (box): comparing candadate values box7:3 and box7:4.
Hidden pair (box): comparing candadate values box7:3 and box7:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (box): processing fist cell: candidate value 3?
Hidden pair (box): processing fist cell: candidate value 5?
Hidden pair (box): processing fist cell: Remove it!
Hidden pair (box): processing fist cell: candidate value 7?
Removed all other candidate values from first cell.
Removed all other candidate values from second cell.
Hidden pair (box): comparing candadate values box7:4 and box7:7.
Hidden pair (row): comparing candadate values row0:3 and row0:5.
Hidden pair (row): comparing candadate values row0:3 and row0:7.
Hidden pair (row): comparing candadate values row0:5 and row0:7.
Hidden pair (row): comparing candadate values row1:4 and row1:7.
Hidden pair (row): comparing candadate values row2:5 and row2:7.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row2:5 and row2:8.
Hidden pair (row): comparing candadate values row2:7 and row2:8.
Hidden pair (row): comparing candadate values row3:4 and row3:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row4:1 and row4:5.
Hidden pair (row): comparing candadate values row4:1 and row4:8.
Hidden pair (row): comparing candadate values row4:5 and row4:8.
Hidden pair (row): comparing candadate values row5:1 and row5:4.
Hidden pair (row): comparing candadate values row5:1 and row5:8.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row5:4 and row5:8.
Hidden pair (row): comparing candadate values row8:3 and row8:8.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col0:4 and col0:8.
Hidden pair (col): comparing candadate values col1:5 and col1:7.
Hidden pair (col): comparing candadate values col2:3 and col2:4.
Hidden pair (col): comparing candadate values col2:3 and col2:5.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col2:4 and col2:5.
Hidden pair (col): comparing candadate values col4:1 and col4:4.
Hidden pair (col): comparing candadate values col4:1 and col4:5.
Hidden pair (col): comparing candadate values col4:4 and col4:5.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col5:3 and col5:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Removed all other candidate values from second cell.
Hidden pair (col): comparing candadate values col5:3 and col5:8.
Hidden pair (col): comparing candadate values col5:3 and col5:9.
Hidden pair (col): comparing candadate values col5:7 and col5:8.
Hidden pair (col): comparing candadate values col5:7 and col5:9.
Hidden pair (col): comparing candadate values col5:8 and col5:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (col): comparing candadate values col6:4 and col6:5.
Hidden pair (col): comparing candadate values col6:4 and col6:8.
Hidden pair (col): comparing candadate values col6:5 and col6:8.
Found and processed 0 hidden pairs.

==== End Pass 1 (progress is 57) ====
==== Pass 2 ====
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |       '       '       |       '       '       |  
  1 | 4     ' 4     '   6   | 4     ' 4 5   '   5   |       '   1   '   2   |  
    |     9 ' 7   9 '       | 7 8 9 '   8 9 '       |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   ' 4 5   '   8   | 4     '   3   '   1   |   6   '   5   '   5   |  
    |       '     9 '       |     9 '       '       |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |       '   5   '   1   |       '   6   '   2   |   5   '   4   '   3   |  
    |     9 ' 7   9 '       | 7 8 9 '       '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   1   '   2   ' 4     |   5   '   7   '   6   | 4     '   3   '       |  
    |       '       '     9 |       '       '       |     9 '       '   8   |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       ' 1     '       |       '       ' 1     |  
  5 |       '       '   5   |   2   '       '   4   |   7   '   6   '   5   |  
    |   8 9 '   8 9 '     9 |       '     9 '       |       '       '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     '       |       '       ' 1     |  
  6 |   7   '   6   ' 4 5   |   3   '       '       |   2   '   5   ' 4 5   |  
    |       '       '     9 |       '   8 9 '   8 9 |       '     9 '     9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   | 4     ' 4     '       |   3   '   2   '   6   |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '     3 |       '       '       |  
  8 | 4     ' 4     '       |   6   '   2   '       |   1   '   5   ' 4 5   |  
    |   8 9 '   8 9 '     9 |       '       ' 7     |       ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       '       '     3 |       '       '       |  
  9 |   6   ' 4     '   2   |   1   '   5   '   5   | 4 5   '   5   ' 4 5   |  
    |       '   8 9 '       |       '       ' 7     |     9 ' 7 8 9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
Looking for Singletons (cells with only one possible value left) :
Setting cell ( 1, 6, 2 ) to 5
Setting cell ( 3, 1, 1 ) to 9
Setting cell ( 4, 9, 6 ) to 8
Setting cell ( 9, 5, 8 ) to 5
Found and set 4 cells this singletons search pass.

So far we filled this many cells: 43
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |       '       '       |       '       '       |  
  1 | 4     ' 4     '   6   | 4     ' 4     '   5   |       '   1   '   2   |  
    |       ' 7     '       | 7 8 9 '   8 9 '       |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   ' 4 5   '   8   | 4     '   3   '   1   |   6   '   5   '   5   |  
    |       '       '       |     9 '       '       |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |   9   '   5   '   1   |       '   6   '   2   |   5   '   4   '   3   |  
    |       ' 7     '       | 7 8   '       '       |   8   '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   1   '   2   ' 4     |   5   '   7   '   6   | 4     '   3   '   8   |  
    |       '       '     9 |       '       '       |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       ' 1     '       |       '       ' 1     |  
  5 |       '       '   5   |   2   '       '   4   |   7   '   6   '   5   |  
    |   8   '   8 9 '     9 |       '     9 '       |       '       '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     '       |       '       ' 1     |  
  6 |   7   '   6   ' 4 5   |   3   '       '       |   2   '   5   ' 4 5   |  
    |       '       '     9 |       '   8 9 '   8 9 |       '     9 '     9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   | 4     ' 4     '       |   3   '   2   '   6   |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '     3 |       '       '       |  
  8 | 4     ' 4     '       |   6   '   2   '       |   1   '   5   ' 4 5   |  
    |   8   '   8 9 '     9 |       '       ' 7     |       ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       '       '     3 |       '       '       |  
  9 |   6   ' 4     '   2   |   1   '   5   '       | 4     '       ' 4     |  
    |       '   8 9 '       |       '       ' 7     |     9 ' 7 8 9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end singletons method ----

Looking for Singletons (cells with only one possible value left) :
Found and set 0 cells this singletons search pass.

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Column Setting cell ( 3, 7, 3 ) to 5
Found and set 2 cells this lone representatives search pass.

So far we filled this many cells: 44
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |       '       '       |       '       '       |  
  1 | 4     ' 4     '   6   | 4     ' 4     '   5   |       '   1   '   2   |  
    |       ' 7     '       | 7 8 9 '   8 9 '       |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   ' 4 5   '   8   | 4     '   3   '   1   |   6   '       '       |  
    |       '       '       |     9 '       '       |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |   9   '       '   1   |       '   6   '   2   |   5   '   4   '   3   |  
    |       ' 7     '       | 7 8   '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   1   '   2   ' 4     |   5   '   7   '   6   | 4     '   3   '   8   |  
    |       '       '     9 |       '       '       |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       ' 1     '       |       '       ' 1     |  
  5 |       '       '   5   |   2   '       '   4   |   7   '   6   '   5   |  
    |   8   '   8 9 '     9 |       '     9 '       |       '       '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     '       |       '       ' 1     |  
  6 |   7   '   6   ' 4 5   |   3   '       '       |   2   '   5   ' 4 5   |  
    |       '       '     9 |       '   8 9 '   8 9 |       '     9 '     9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   | 4     ' 4     '       |   3   '   2   '   6   |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '     3 |       '       '       |  
  8 | 4     ' 4     '       |   6   '   2   '       |   1   '   5   ' 4 5   |  
    |   8   '   8 9 '     9 |       '       ' 7     |       ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       '       '     3 |       '       '       |  
  9 |   6   ' 4     '   2   |   1   '   5   '       | 4     '       ' 4     |  
    |       '   8 9 '       |       '       ' 7     |     9 ' 7 8 9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 2, 2, 1 ) to 5
Lone in Box    Setting cell ( 1, 7, 3 ) to 8
Lone in Row    Setting cell ( 3, 4, 2 ) to 8
Lone in Row    Setting cell ( 2, 4, 2 ) to 4
Lone in Column Setting cell ( 1, 4, 2 ) to 7
Lone in Column Setting cell ( 7, 5, 8 ) to 4
Found and set 8 cells this lone representatives search pass.

So far we filled this many cells: 50
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |       '       '       |       '       '       |  
  1 | 4     ' 4     '   6   |   7   '       '   5   |   8   '   1   '   2   |  
    |       '       '       |       '     9 '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   '   5   '   8   |   4   '   3   '   1   |   6   '       '       |  
    |       '       '       |       '       '       |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |   9   '       '   1   |   8   '   6   '   2   |   5   '   4   '   3   |  
    |       ' 7     '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   1   '   2   ' 4     |   5   '   7   '   6   | 4     '   3   '   8   |  
    |       '       '     9 |       '       '       |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       ' 1     '       |       '       ' 1     |  
  5 |       '       '   5   |   2   '       '   4   |   7   '   6   '   5   |  
    |   8   '   8 9 '     9 |       '     9 '       |       '       '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     '       |       '       ' 1     |  
  6 |   7   '   6   ' 4 5   |   3   '       '       |   2   '   5   ' 4 5   |  
    |       '       '     9 |       '   8 9 '   8 9 |       '     9 '     9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   |       '   4   '       |   3   '   2   '   6   |  
    |       '       '       |     9 '       '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '     3 |       '       '       |  
  8 | 4     ' 4     '       |   6   '   2   '       |   1   '   5   ' 4 5   |  
    |   8   '   8 9 '     9 |       '       ' 7     |       ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       '       '     3 |       '       '       |  
  9 |   6   ' 4     '   2   |   1   '   5   '       | 4     '       ' 4     |  
    |       '   8 9 '       |       '       ' 7     |     9 ' 7 8 9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 3, 2, 1 ) to 7
Lone in Box    Setting cell ( 1, 5, 2 ) to 9
Lone in Box    Setting cell ( 7, 6, 8 ) to 8
Lone in Row    Setting cell ( 6, 5, 5 ) to 8
Lone in Row    Setting cell ( 7, 4, 8 ) to 9
Lone in Column Setting cell ( 6, 6, 5 ) to 9
Lone in Column Setting cell ( 5, 5, 5 ) to 1
Found and set 9 cells this lone representatives search pass.

So far we filled this many cells: 57
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |       '       '       |       '       '       |  
  1 | 4     ' 4     '   6   |   7   '   9   '   5   |   8   '   1   '   2   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   '   5   '   8   |   4   '   3   '   1   |   6   '       '       |  
    |       '       '       |       '       '       |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |   9   '   7   '   1   |   8   '   6   '   2   |   5   '   4   '   3   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   1   '   2   ' 4     |   5   '   7   '   6   | 4     '   3   '   8   |  
    |       '       '     9 |       '       '       |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '       |       '       '       |  
  5 |       '       '   5   |   2   '   1   '   4   |   7   '   6   '   5   |  
    |   8   '   8 9 '     9 |       '       '       |       '       '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       ' 1     |  
  6 |   7   '   6   ' 4 5   |   3   '   8   '   9   |   2   '   5   ' 4 5   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   |   9   '   4   '   8   |   3   '   2   '   6   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '     3 |       '       '       |  
  8 | 4     ' 4     '       |   6   '   2   '       |   1   '   5   ' 4 5   |  
    |   8   '   8 9 '     9 |       '       ' 7     |       ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       '       '     3 |       '       '       |  
  9 |   6   ' 4     '   2   |   1   '   5   '       | 4     '       ' 4     |  
    |       '   8 9 '       |       '       ' 7     |     9 ' 7 8 9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 6, 9, 6 ) to 1
Lone in Row    Setting cell ( 6, 3, 4 ) to 4
Lone in Column Setting cell ( 5, 3, 4 ) to 5
Found and set 4 cells this lone representatives search pass.

So far we filled this many cells: 60
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |       '       '       |       '       '       |  
  1 | 4     ' 4     '   6   |   7   '   9   '   5   |   8   '   1   '   2   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   '   5   '   8   |   4   '   3   '   1   |   6   '       '       |  
    |       '       '       |       '       '       |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |   9   '   7   '   1   |   8   '   6   '   2   |   5   '   4   '   3   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   1   '   2   '       |   5   '   7   '   6   | 4     '   3   '   8   |  
    |       '       '     9 |       '       '       |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '       |       '       '       |       '       '       |  
  5 |       '       '   5   |   2   '   1   '   4   |   7   '   6   '       |  
    |   8   '   8 9 '       |       '       '       |       '       '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  6 |   7   '   6   '   4   |   3   '   8   '   9   |   2   '   5   '   1   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   |   9   '   4   '   8   |   3   '   2   '   6   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '     3 |       '       '     3 |       '       '       |  
  8 | 4     ' 4     '       |   6   '   2   '       |   1   '   5   ' 4 5   |  
    |   8   '   8 9 '     9 |       '       ' 7     |       ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       '       '     3 |       '       '       |  
  9 |   6   ' 4     '   2   |   1   '   5   '       | 4     '       ' 4     |  
    |       '   8 9 '       |       '       ' 7     |     9 ' 7 8 9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 4, 7, 6 ) to 4
Lone in Box    Setting cell ( 6, 8, 6 ) to 5
Lone in Row    Setting cell ( 4, 3, 4 ) to 9
Lone in Row    Setting cell ( 8, 9, 9 ) to 5
Lone in Column Setting cell ( 8, 3, 7 ) to 3
Lone in Column Setting cell ( 9, 9, 9 ) to 4
Lone in Column Setting cell ( 9, 7, 9 ) to 9
Found and set 10 cells this lone representatives search pass.

So far we filled this many cells: 67
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |       '       '       |       '       '       |  
  1 | 4     ' 4     '   6   |   7   '   9   '   5   |   8   '   1   '   2   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   '   5   '   8   |   4   '   3   '   1   |   6   '       '       |  
    |       '       '       |       '       '       |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |   9   '   7   '   1   |   8   '   6   '   2   |   5   '   4   '   3   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   1   '   2   '   9   |   5   '   7   '   6   |   4   '   3   '   8   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '     3 '       |       '       '       |       '       '       |  
  5 |       '       '   5   |   2   '   1   '   4   |   7   '   6   '       |  
    |   8   '   8   '       |       '       '       |       '       '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  6 |   7   '   6   '   4   |   3   '   8   '   9   |   2   '   5   '   1   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   |   9   '   4   '   8   |   3   '   2   '   6   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  8 | 4     ' 4     '   3   |   6   '   2   '       |   1   '       '   5   |  
    |   8   '   8 9 '       |       '       ' 7     |       ' 7 8   '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '     3 |       '       '       |  
  9 |   6   '       '   2   |   1   '   5   '       |   9   '       '   4   |  
    |       '   8   '       |       '       ' 7     |       ' 7 8   '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 5, 9, 6 ) to 9
Lone in Box    Setting cell ( 8, 2, 7 ) to 9
Lone in Box    Setting cell ( 9, 6, 8 ) to 3
Lone in Row    Setting cell ( 2, 8, 3 ) to 9
Lone in Row    Setting cell ( 8, 1, 7 ) to 4
Lone in Row    Setting cell ( 9, 8, 9 ) to 7
Lone in Column Setting cell ( 5, 1, 4 ) to 8
Lone in Column Setting cell ( 8, 6, 8 ) to 7
Lone in Column Setting cell ( 1, 2, 1 ) to 4
Lone in Column Setting cell ( 2, 9, 3 ) to 7
Lone in Column Setting cell ( 8, 8, 9 ) to 8
Found and set 16 cells this lone representatives search pass.

So far we filled this many cells: 78
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '       '       |       '       '       |       '       '       |  
  1 |       '   4   '   6   |   7   '   9   '   5   |   8   '   1   '   2   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   '   5   '   8   |   4   '   3   '   1   |   6   '   9   '   7   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |   9   '   7   '   1   |   8   '   6   '   2   |   5   '   4   '   3   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   1   '   2   '   9   |   5   '   7   '   6   |   4   '   3   '   8   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       '       '       |       '       '       |  
  5 |   8   '       '   5   |   2   '   1   '   4   |   7   '   6   '   9   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  6 |   7   '   6   '   4   |   3   '   8   '   9   |   2   '   5   '   1   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   |   9   '   4   '   8   |   3   '   2   '   6   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  8 |   4   '   9   '   3   |   6   '   2   '   7   |   1   '   8   '   5   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  9 |   6   '       '   2   |   1   '   5   '   3   |   9   '   7   '   4   |  
    |       '   8   '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 1, 1, 1 ) to 3
Lone in Box    Setting cell ( 5, 2, 4 ) to 3
Lone in Box    Setting cell ( 9, 2, 7 ) to 8
Found and set 3 cells this lone representatives search pass.

So far we filled this many cells: 81
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   3   '   4   '   6   |   7   '   9   '   5   |   8   '   1   '   2   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   2   '   5   '   8   |   4   '   3   '   1   |   6   '   9   '   7   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |   9   '   7   '   1   |   8   '   6   '   2   |   5   '   4   '   3   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   1   '   2   '   9   |   5   '   7   '   6   |   4   '   3   '   8   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  5 |   8   '   3   '   5   |   2   '   1   '   4   |   7   '   6   '   9   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  6 |   7   '   6   '   4   |   3   '   8   '   9   |   2   '   5   '   1   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   5   '   1   '   7   |   9   '   4   '   8   |   3   '   2   '   6   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  8 |   4   '   9   '   3   |   6   '   2   '   7   |   1   '   8   '   5   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  9 |   6   '   8   '   2   |   1   '   5   '   3   |   9   '   7   '   4   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

==== End Pass 2 (progress is 56) ====
We have solved this puzzle.  Final solution is:
346795812258431697971862543129576438835214769764389251517948326493627185682153974
