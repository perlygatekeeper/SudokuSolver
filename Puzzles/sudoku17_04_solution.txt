puzzle_string: 000000012003600000000007000410020000000500300700000600280000040000300500000000000
==== Pass 1 ====
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '     3 '     3 |       '       '       |  
  1 |   5 6 ' 4 5 6 ' 4 5 6 | 4     ' 4 5   ' 4 5   | 4     '   1   '   2   |  
    |   8 9 ' 7   9 ' 7 8 9 |   8 9 '   8 9 '   8 9 | 7 8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '   2   '       |       ' 1     ' 1 2   |       '       '       |  
  2 |   5   ' 4 5   '   3   |   6   ' 4 5   ' 4 5   | 4     '   5   ' 4 5   |  
    |   8 9 ' 7   9 '       |       '   8 9 '   8 9 | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '   2   ' 1 2   | 1 2   ' 1   3 '       |       '     3 '     3 |  
  3 |   5 6 ' 4 5 6 ' 4 5 6 | 4     ' 4 5   '   7   | 4     '   5 6 ' 4 5 6 |  
    |   8 9 '     9 '   8 9 |   8 9 '   8 9 '       |   8 9 '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '     3 |       '       '       |  
  4 |   4   '   1   '   5 6 |       '   2   '     6 |       '   5   '   5   |  
    |       '       '   8 9 | 7 8 9 '       '   8 9 | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       ' 1     ' 1     |       '   2   ' 1     |  
  5 |     6 '     6 '     6 |   5   ' 4   6 ' 4   6 |   3   '       ' 4     |  
    |   8 9 '     9 '   8 9 |       ' 7 8 9 '   8 9 |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2 3 '   2   | 1     ' 1   3 ' 1   3 |       '   2   ' 1     |  
  6 |   7   '   5   '   5   | 4     ' 4     ' 4     |   6   '   5   ' 4 5   |  
    |       '     9 '   8 9 |   8 9 '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       ' 1     | 1     ' 1     ' 1     | 1     '       ' 1   3 |  
  7 |   2   '   8   '   5 6 |       '   5 6 '   5 6 |       '   4   '     6 |  
    |       '       ' 7   9 | 7   9 ' 7   9 '     9 | 7   9 '       ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     ' 1 2   |       '   2   ' 1     |  
  8 |     6 ' 4   6 ' 4   6 |   3   ' 4   6 ' 4   6 |   5   '     6 '     6 |  
    |     9 ' 7   9 ' 7   9 |       ' 7 8 9 '   8 9 |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1   3 '     3 ' 1     | 1 2   ' 1     ' 1 2   | 1 2   '   2 3 ' 1   3 |  
  9 |   5 6 ' 4 5 6 ' 4 5 6 | 4     ' 4 5 6 ' 4 5 6 |       '     6 '     6 |  
    |     9 ' 7   9 ' 7   9 | 7 8 9 ' 7 8 9 '   8 9 | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
Looking for Singletons (cells with only one possible value left) :
Found and set 0 cells this singletons search pass.

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 6, 2, 4 ) to 3
Lone in Row    Setting cell ( 4, 6, 5 ) to 3
Lone in Row    Setting cell ( 7, 9, 9 ) to 3
Lone in Column Setting cell ( 9, 1, 7 ) to 3
Lone in Column Setting cell ( 9, 7, 9 ) to 2
Lone in Column Setting cell ( 3, 8, 3 ) to 3
Found and set 9 cells this lone representatives search pass.

So far we filled this many cells: 23
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '     3 '       |       '       '       |  
  1 |   5 6 ' 4 5 6 ' 4 5 6 | 4     ' 4 5   ' 4 5   | 4     '   1   '   2   |  
    |   8 9 ' 7   9 ' 7 8 9 |   8 9 '   8 9 '   8 9 | 7 8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '   2   '       |       ' 1     ' 1 2   |       '       '       |  
  2 |   5   ' 4 5   '   3   |   6   ' 4 5   ' 4 5   | 4     '   5   ' 4 5   |  
    |   8 9 ' 7   9 '       |       '   8 9 '   8 9 | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '   2   ' 1 2   | 1 2   ' 1     '       |       '       '       |  
  3 |   5 6 ' 4 5 6 ' 4 5 6 | 4     ' 4 5   '   7   | 4     '   3   ' 4 5 6 |  
    |   8 9 '     9 '   8 9 |   8 9 '   8 9 '       |   8 9 '       '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   5 6 |       '   2   '   3   |       '   5   '   5   |  
    |       '       '   8 9 | 7 8 9 '       '       | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       ' 1     ' 1     |       '   2   ' 1     |  
  5 |     6 '     6 '     6 |   5   ' 4   6 ' 4   6 |   3   '       ' 4     |  
    |   8 9 '     9 '   8 9 |       ' 7 8 9 '   8 9 |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '   2   | 1     ' 1     ' 1     |       '   2   ' 1     |  
  6 |   7   '   3   '   5   | 4     ' 4     ' 4     |   6   '   5   ' 4 5   |  
    |       '       '   8 9 |   8 9 '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       ' 1     | 1     ' 1     ' 1     | 1     '       '       |  
  7 |   2   '   8   '   5 6 |       '   5 6 '   5 6 |       '   4   '   3   |  
    |       '       ' 7   9 | 7   9 ' 7   9 '     9 | 7   9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     ' 1 2   |       '       ' 1     |  
  8 |     6 ' 4   6 ' 4   6 |   3   ' 4   6 ' 4   6 |   5   '     6 '     6 |  
    |     9 ' 7   9 ' 7   9 |       ' 7 8 9 '   8 9 |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     | 1     ' 1     ' 1     |       '       ' 1     |  
  9 |   3   ' 4 5 6 ' 4 5 6 | 4     ' 4 5 6 ' 4 5 6 |   2   '     6 '     6 |  
    |       ' 7   9 ' 7   9 | 7 8 9 ' 7 8 9 '   8 9 |       ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 1, 5, 2 ) to 3
Lone in Box    Setting cell ( 3, 9, 3 ) to 6
Lone in Box    Setting cell ( 8, 6, 8 ) to 2
Lone in Row    Setting cell ( 4, 3, 4 ) to 6
Lone in Row    Setting cell ( 2, 2, 1 ) to 2
Lone in Column Setting cell ( 7, 7, 9 ) to 1
Lone in Column Setting cell ( 3, 4, 2 ) to 2
Found and set 9 cells this lone representatives search pass.

So far we filled this many cells: 30
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   5 6 ' 4 5 6 ' 4 5   | 4     '   3   ' 4 5   | 4     '   1   '   2   |  
    |   8 9 ' 7   9 ' 7 8 9 |   8 9 '       '   8 9 | 7 8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       '       |       ' 1     ' 1     |       '       '       |  
  2 |   5   '   2   '   3   |   6   ' 4 5   ' 4 5   | 4     '   5   ' 4 5   |  
    |   8 9 '       '       |       '   8 9 '   8 9 | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  3 |   5   ' 4 5   ' 4 5   |   2   ' 4 5   '   7   | 4     '   3   '   6   |  
    |   8 9 '     9 '   8 9 |       '   8 9 '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   6   |       '   2   '   3   |       '   5   '   5   |  
    |       '       '       | 7 8 9 '       '       | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '   2   |       ' 1     ' 1     |       '   2   ' 1     |  
  5 |       '       '       |   5   ' 4   6 ' 4   6 |   3   '       ' 4     |  
    |   8 9 '     9 '   8 9 |       ' 7 8 9 '   8 9 |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '   2   | 1     ' 1     ' 1     |       '   2   ' 1     |  
  6 |   7   '   3   '   5   | 4     ' 4     ' 4     |   6   '   5   ' 4 5   |  
    |       '       '   8 9 |   8 9 '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   2   '   8   '   5   |       '   5 6 '   5 6 |   1   '   4   '   3   |  
    |       '       ' 7   9 | 7   9 ' 7   9 '     9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  8 |     6 ' 4   6 ' 4     |   3   ' 4   6 '   2   |   5   '     6 '       |  
    |     9 ' 7   9 ' 7   9 |       ' 7 8 9 '       |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     | 1     ' 1     ' 1     |       '       '       |  
  9 |   3   ' 4 5 6 ' 4 5   | 4     ' 4 5 6 ' 4 5 6 |   2   '     6 '       |  
    |       ' 7   9 ' 7   9 | 7 8 9 ' 7 8 9 '   8 9 |       ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 6, 3, 4 ) to 5
Lone in Row    Setting cell ( 6, 8, 6 ) to 2
Lone in Column Setting cell ( 5, 3, 4 ) to 2
Found and set 4 cells this lone representatives search pass.

So far we filled this many cells: 33
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   5 6 ' 4 5 6 ' 4     | 4     '   3   ' 4 5   | 4     '   1   '   2   |  
    |   8 9 ' 7   9 ' 7 8 9 |   8 9 '       '   8 9 | 7 8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       '       |       ' 1     ' 1     |       '       '       |  
  2 |   5   '   2   '   3   |   6   ' 4 5   ' 4 5   | 4     '   5   ' 4 5   |  
    |   8 9 '       '       |       '   8 9 '   8 9 | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  3 |   5   ' 4 5   ' 4     |   2   ' 4 5   '   7   | 4     '   3   '   6   |  
    |   8 9 '     9 '   8 9 |       '   8 9 '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   6   |       '   2   '   3   |       '   5   '   5   |  
    |       '       '       | 7 8 9 '       '       | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     ' 1     |       '       ' 1     |  
  5 |       '       '   2   |   5   ' 4   6 ' 4   6 |   3   '       ' 4     |  
    |   8 9 '     9 '       |       ' 7 8 9 '   8 9 |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       | 1     ' 1     ' 1     |       '       ' 1     |  
  6 |   7   '   3   '   5   | 4     ' 4     ' 4     |   6   '   2   ' 4     |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   2   '   8   '       |       '   5 6 '   5 6 |   1   '   4   '   3   |  
    |       '       ' 7   9 | 7   9 ' 7   9 '     9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  8 |     6 ' 4   6 ' 4     |   3   ' 4   6 '   2   |   5   '     6 '       |  
    |     9 ' 7   9 ' 7   9 |       ' 7 8 9 '       |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     | 1     ' 1     ' 1     |       '       '       |  
  9 |   3   ' 4 5 6 ' 4     | 4     ' 4 5 6 ' 4 5 6 |   2   '     6 '       |  
    |       ' 7   9 ' 7   9 | 7 8 9 ' 7 8 9 '   8 9 |       ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 5, 1, 4 ) to 8
Lone in Box    Setting cell ( 9, 2, 7 ) to 5
Found and set 2 cells this lone representatives search pass.

So far we filled this many cells: 35
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   5 6 ' 4   6 ' 4     | 4     '   3   ' 4 5   | 4     '   1   '   2   |  
    |     9 ' 7   9 ' 7 8 9 |   8 9 '       '   8 9 | 7 8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       '       |       ' 1     ' 1     |       '       '       |  
  2 |   5   '   2   '   3   |   6   ' 4 5   ' 4 5   | 4     '   5   ' 4 5   |  
    |     9 '       '       |       '   8 9 '   8 9 | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  3 |   5   ' 4     ' 4     |   2   ' 4 5   '   7   | 4     '   3   '   6   |  
    |     9 '     9 '   8 9 |       '   8 9 '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   6   |       '   2   '   3   |       '   5   '   5   |  
    |       '       '       | 7 8 9 '       '       | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     ' 1     |       '       ' 1     |  
  5 |   8   '       '   2   |   5   ' 4   6 ' 4   6 |   3   '       ' 4     |  
    |       '     9 '       |       ' 7   9 '     9 |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       | 1     ' 1     ' 1     |       '       ' 1     |  
  6 |   7   '   3   '   5   | 4     ' 4     ' 4     |   6   '   2   ' 4     |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   2   '   8   '       |       '   5 6 '   5 6 |   1   '   4   '   3   |  
    |       '       ' 7   9 | 7   9 ' 7   9 '     9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  8 |     6 ' 4   6 ' 4     |   3   ' 4   6 '   2   |   5   '     6 '       |  
    |     9 ' 7   9 ' 7   9 |       ' 7 8 9 '       |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     | 1     ' 1     ' 1     |       '       '       |  
  9 |   3   '   5   ' 4     | 4     ' 4   6 ' 4   6 |   2   '     6 '       |  
    |       '       ' 7   9 | 7 8 9 ' 7 8 9 '   8 9 |       ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 5, 2, 4 ) to 9
Found and set 1 cells this lone representatives search pass.

So far we filled this many cells: 36
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   5 6 ' 4   6 ' 4     | 4     '   3   ' 4 5   | 4     '   1   '   2   |  
    |     9 ' 7     ' 7 8 9 |   8 9 '       '   8 9 | 7 8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       '       |       ' 1     ' 1     |       '       '       |  
  2 |   5   '   2   '   3   |   6   ' 4 5   ' 4 5   | 4     '   5   ' 4 5   |  
    |     9 '       '       |       '   8 9 '   8 9 | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  3 |   5   ' 4     ' 4     |   2   ' 4 5   '   7   | 4     '   3   '   6   |  
    |     9 '       '   8 9 |       '   8 9 '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   6   |       '   2   '   3   |       '   5   '   5   |  
    |       '       '       | 7 8 9 '       '       | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     ' 1     |       '       ' 1     |  
  5 |   8   '   9   '   2   |   5   ' 4   6 ' 4   6 |   3   '       ' 4     |  
    |       '       '       |       ' 7     '       |       ' 7     ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       | 1     ' 1     ' 1     |       '       ' 1     |  
  6 |   7   '   3   '   5   | 4     ' 4     ' 4     |   6   '   2   ' 4     |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   2   '   8   '       |       '   5 6 '   5 6 |   1   '   4   '   3   |  
    |       '       ' 7   9 | 7   9 ' 7   9 '     9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  8 |     6 ' 4   6 ' 4     |   3   ' 4   6 '   2   |   5   '     6 '       |  
    |     9 ' 7     ' 7   9 |       ' 7 8 9 '       |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     | 1     ' 1     ' 1     |       '       '       |  
  9 |   3   '   5   ' 4     | 4     ' 4   6 ' 4   6 |   2   '     6 '       |  
    |       '       ' 7   9 | 7 8 9 ' 7 8 9 '   8 9 |       ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Found and set 0 cells this lone representatives search pass.

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Imaginary value of 7 found in Box 1 all in row 1...   removing it from the cell ( 1, 7, 3 ).
Imaginary value of 5 found in Box 3 all in row 2...   removing it from the cell ( 2, 1, 1 ).
Imaginary value of 5 found in Box 3 all in row 2...   removing it from the cell ( 2, 5, 2 ).
Imaginary value of 5 found in Box 3 all in row 2...   removing it from the cell ( 2, 6, 2 ).
Imaginary value of 4 found in Box 6 all in col 9...   removing it from the cell ( 2, 9, 3 ).
Imaginary value of 6 found in Box 7 all in row 8...   removing it from the cell ( 8, 5, 8 ).
Imaginary value of 6 found in Box 7 all in row 8...   removing it from the cell ( 8, 8, 9 ).
Imaginary value of 6 found in Row 7...   removing it from the cell ( 9, 5, 8 ).
Imaginary value of 6 found in Row 7...   removing it from the cell ( 9, 6, 8 ).
Found and removed 9 possible values from cells via imaginary numbers.

So far we filled this many cells: 36
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   5 6 ' 4   6 ' 4     | 4     '   3   ' 4 5   | 4     '   1   '   2   |  
    |     9 ' 7     ' 7 8 9 |   8 9 '       '   8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       '       |       ' 1     ' 1     |       '       '       |  
  2 |       '   2   '   3   |   6   ' 4     ' 4     | 4     '   5   '   5   |  
    |     9 '       '       |       '   8 9 '   8 9 | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  3 |   5   ' 4     ' 4     |   2   ' 4 5   '   7   | 4     '   3   '   6   |  
    |     9 '       '   8 9 |       '   8 9 '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   6   |       '   2   '   3   |       '   5   '   5   |  
    |       '       '       | 7 8 9 '       '       | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     ' 1     |       '       ' 1     |  
  5 |   8   '   9   '   2   |   5   ' 4   6 ' 4   6 |   3   '       ' 4     |  
    |       '       '       |       ' 7     '       |       ' 7     ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       | 1     ' 1     ' 1     |       '       ' 1     |  
  6 |   7   '   3   '   5   | 4     ' 4     ' 4     |   6   '   2   ' 4     |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   2   '   8   '       |       '   5 6 '   5 6 |   1   '   4   '   3   |  
    |       '       ' 7   9 | 7   9 ' 7   9 '     9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  8 |     6 ' 4   6 ' 4     |   3   ' 4     '   2   |   5   '       '       |  
    |     9 ' 7     ' 7   9 |       ' 7 8 9 '       |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     | 1     ' 1     ' 1     |       '       '       |  
  9 |   3   '   5   ' 4     | 4     ' 4     ' 4     |   2   '     6 '       |  
    |       '       ' 7   9 | 7 8 9 ' 7 8 9 '   8 9 |       ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end imaginary values method ----

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Found and removed 0 possible values from cells via imaginary numbers.

Looking for Naked Pairs, any two cells with the same
pair of possible values that exist in the same cluster [row column or box]):
Naked pair in row 7, cols 3 and 4 leads to 7 being removed from cell ( 7, 5, 8 ).
Naked pair in row 7, cols 3 and 4 leads to 9 being removed from cell ( 7, 5, 8 ).
Naked pair in row 7, cols 3 and 4 leads to 9 being removed from cell ( 7, 6, 8 ).
Found and processed 3 naked pairs.

So far we filled this many cells: 36
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   5 6 ' 4   6 ' 4     | 4     '   3   ' 4 5   | 4     '   1   '   2   |  
    |     9 ' 7     ' 7 8 9 |   8 9 '       '   8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       '       |       ' 1     ' 1     |       '       '       |  
  2 |       '   2   '   3   |   6   ' 4     ' 4     | 4     '   5   '   5   |  
    |     9 '       '       |       '   8 9 '   8 9 | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  3 |   5   ' 4     ' 4     |   2   ' 4 5   '   7   | 4     '   3   '   6   |  
    |     9 '       '   8 9 |       '   8 9 '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   6   |       '   2   '   3   |       '   5   '   5   |  
    |       '       '       | 7 8 9 '       '       | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     ' 1     |       '       ' 1     |  
  5 |   8   '   9   '   2   |   5   ' 4   6 ' 4   6 |   3   '       ' 4     |  
    |       '       '       |       ' 7     '       |       ' 7     ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       | 1     ' 1     ' 1     |       '       ' 1     |  
  6 |   7   '   3   '   5   | 4     ' 4     ' 4     |   6   '   2   ' 4     |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   2   '   8   '       |       '   5 6 '   5 6 |   1   '   4   '   3   |  
    |       '       ' 7   9 | 7   9 '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  8 |     6 ' 4   6 ' 4     |   3   ' 4     '   2   |   5   '       '       |  
    |     9 ' 7     ' 7   9 |       ' 7 8 9 '       |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     | 1     ' 1     ' 1     |       '       '       |  
  9 |   3   '   5   ' 4     | 4     ' 4     ' 4     |   2   '     6 '       |  
    |       '       ' 7   9 | 7 8 9 ' 7 8 9 '   8 9 |       ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end naked pairs method ----

Looking for Naked Pairs, any two cells with the same
pair of possible values that exist in the same cluster [row column or box]):
Found and processed 0 naked pairs.

Looking for Hidden Pairs, (any two candidate values which exist 
only in the same two cells in a given cluster):
---- find_hidden_pairs: Start all possibility counts ------
3 col6:4
2 col6:7
4 col6:8
4 col6:9
---- find_hidden_pairs: End   all possibility counts ------
Hidden pair (box): comparing candadate values box0:5 and box0:6.
Two candidate values shared first cell.
Hidden pair (box): comparing candadate values box0:5 and box0:7.
Hidden pair (box): comparing candadate values box0:5 and box0:8.
Hidden pair (box): comparing candadate values box0:6 and box0:7.
Hidden pair (box): comparing candadate values box0:6 and box0:8.
Hidden pair (box): comparing candadate values box0:7 and box0:8.
Hidden pair (box): comparing candadate values box4:6 and box4:7.
Hidden pair (box): comparing candadate values box5:1 and box5:4.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (box): processing fist cell: candidate value 1?
Hidden pair (box): processing fist cell: candidate value 4?
Hidden pair (box): processing fist cell: candidate value 7?
Hidden pair (box): processing fist cell: Remove it!
Removed all other candidate values from first cell.
Removed all other candidate values from second cell.
Hidden pair (box): comparing candadate values box5:1 and box5:5.
Hidden pair (box): comparing candadate values box5:4 and box5:5.
Hidden pair (box): comparing candadate values box7:5 and box7:6.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row0:5 and row0:6.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row0:5 and row0:7.
Hidden pair (row): comparing candadate values row0:6 and row0:7.
Hidden pair (row): comparing candadate values row6:5 and row6:6.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row6:5 and row6:7.
Hidden pair (row): comparing candadate values row6:5 and row6:9.
Hidden pair (row): comparing candadate values row6:6 and row6:7.
Hidden pair (row): comparing candadate values row6:6 and row6:9.
Hidden pair (row): comparing candadate values row6:7 and row6:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (col): comparing candadate values col0:5 and col0:6.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col1:6 and col1:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (col): processing fist cell: candidate value 4?
Hidden pair (col): processing fist cell: Remove it!
Hidden pair (col): processing fist cell: candidate value 6?
Hidden pair (col): processing fist cell: candidate value 7?
Removed all other candidate values from first cell.
Removed all other candidate values from second cell.
Hidden pair (col): comparing candadate values col4:5 and col4:6.
Hidden pair (col): comparing candadate values col5:5 and col5:6.
Hidden pair (col): comparing candadate values col8:1 and col8:4.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Removed all other candidate values from second cell.
Hidden pair (col): comparing candadate values col8:1 and col8:5.
Hidden pair (col): comparing candadate values col8:4 and col8:5.
Found and processed 0 hidden pairs.

==== End Pass 1 (progress is 37) ====
==== Pass 2 ====
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   5 6 '     6 ' 4     | 4     '   3   ' 4 5   | 4     '   1   '   2   |  
    |     9 ' 7     ' 7 8 9 |   8 9 '       '   8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       '       |       ' 1     ' 1     |       '       '       |  
  2 |       '   2   '   3   |   6   ' 4     ' 4     | 4     '   5   '   5   |  
    |     9 '       '       |       '   8 9 '   8 9 | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  3 |   5   ' 4     ' 4     |   2   ' 4 5   '   7   | 4     '   3   '   6   |  
    |     9 '       '   8 9 |       '   8 9 '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   6   |       '   2   '   3   |       '   5   '   5   |  
    |       '       '       | 7 8 9 '       '       | 7 8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     ' 1     |       '       ' 1     |  
  5 |   8   '   9   '   2   |   5   ' 4   6 ' 4   6 |   3   '       ' 4     |  
    |       '       '       |       ' 7     '       |       ' 7     '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       | 1     ' 1     ' 1     |       '       ' 1     |  
  6 |   7   '   3   '   5   | 4     ' 4     ' 4     |   6   '   2   ' 4     |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   2   '   8   '       |       '   5 6 '   5 6 |   1   '   4   '   3   |  
    |       '       ' 7   9 | 7   9 '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  8 |     6 ' 4   6 ' 4     |   3   ' 4     '   2   |   5   '       '       |  
    |     9 ' 7     ' 7   9 |       ' 7 8 9 '       |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     | 1     ' 1     ' 1     |       '       '       |  
  9 |   3   '   5   ' 4     | 4     ' 4     ' 4     |   2   '     6 '       |  
    |       '       ' 7   9 | 7 8 9 ' 7 8 9 '   8 9 |       ' 7 8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
Looking for Singletons (cells with only one possible value left) :
Setting cell ( 3, 2, 1 ) to 4
Setting cell ( 5, 8, 6 ) to 7
Found and set 2 cells this singletons search pass.

So far we filled this many cells: 38
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   5 6 '     6 '       | 4     '   3   ' 4 5   | 4     '   1   '   2   |  
    |     9 ' 7     ' 7 8 9 |   8 9 '       '   8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       '       |       ' 1     ' 1     |       '       '       |  
  2 |       '   2   '   3   |   6   ' 4     ' 4     | 4     '   5   '   5   |  
    |     9 '       '       |       '   8 9 '   8 9 | 7 8 9 '   8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  3 |   5   '   4   '       |   2   '   5   '   7   |       '   3   '   6   |  
    |     9 '       '   8 9 |       '   8 9 '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   6   |       '   2   '   3   |       '   5   '   5   |  
    |       '       '       | 7 8 9 '       '       |   8 9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     ' 1     |       '       ' 1     |  
  5 |   8   '   9   '   2   |   5   ' 4   6 ' 4   6 |   3   '   7   ' 4     |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       | 1     ' 1     ' 1     |       '       ' 1     |  
  6 |   7   '   3   '   5   | 4     ' 4     ' 4     |   6   '   2   ' 4     |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   2   '   8   '       |       '   5 6 '   5 6 |   1   '   4   '   3   |  
    |       '       ' 7   9 | 7   9 '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  8 |     6 '     6 ' 4     |   3   ' 4     '   2   |   5   '       '       |  
    |     9 ' 7     ' 7   9 |       ' 7 8 9 '       |       '   8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     | 1     ' 1     ' 1     |       '       '       |  
  9 |   3   '   5   ' 4     | 4     ' 4     ' 4     |   2   '     6 '       |  
    |       '       ' 7   9 | 7 8 9 ' 7 8 9 '   8 9 |       '   8 9 ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end singletons method ----

Looking for Singletons (cells with only one possible value left) :
Found and set 0 cells this singletons search pass.

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 4, 4, 5 ) to 7
Lone in Box    Setting cell ( 9, 8, 9 ) to 6
Lone in Row    Setting cell ( 7, 3, 7 ) to 7
Lone in Column Setting cell ( 2, 7, 3 ) to 7
Lone in Column Setting cell ( 1, 2, 1 ) to 7
Found and set 7 cells this lone representatives search pass.

So far we filled this many cells: 43
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   5 6 '   7   '       | 4     '   3   ' 4 5   | 4     '   1   '   2   |  
    |     9 '       '   8 9 |   8 9 '       '   8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       '       |       ' 1     ' 1     |       '       '       |  
  2 |       '   2   '   3   |   6   ' 4     ' 4     |   7   '   5   '   5   |  
    |     9 '       '       |       '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  3 |   5   '   4   '       |   2   '   5   '   7   |       '   3   '   6   |  
    |     9 '       '   8 9 |       '   8 9 '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   6   |   7   '   2   '   3   |       '   5   '   5   |  
    |       '       '       |       '       '       |   8 9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     ' 1     |       '       ' 1     |  
  5 |   8   '   9   '   2   |   5   ' 4   6 ' 4   6 |   3   '   7   ' 4     |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       | 1     ' 1     ' 1     |       '       ' 1     |  
  6 |   7   '   3   '   5   | 4     ' 4     ' 4     |   6   '   2   ' 4     |  
    |       '       '       |   8 9 '   8 9 '   8 9 |       '       '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   2   '   8   '   7   |       '   5 6 '   5 6 |   1   '   4   '   3   |  
    |       '       '       |     9 '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  8 |     6 '     6 ' 4     |   3   ' 4     '   2   |   5   '       '       |  
    |     9 '       '     9 |       ' 7 8 9 '       |       '   8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     | 1     ' 1     ' 1     |       '       '       |  
  9 |   3   '   5   ' 4     | 4     ' 4     ' 4     |   2   '   6   '       |  
    |       '       '     9 |   8 9 ' 7 8 9 '   8 9 |       '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 1, 1, 1 ) to 6
Lone in Box    Setting cell ( 1, 7, 3 ) to 4
Lone in Row    Setting cell ( 1, 6, 2 ) to 5
Lone in Row    Setting cell ( 7, 4, 8 ) to 9
Lone in Row    Setting cell ( 8, 2, 7 ) to 6
Lone in Column Setting cell ( 3, 1, 1 ) to 5
Lone in Column Setting cell ( 7, 5, 8 ) to 5
Found and set 9 cells this lone representatives search pass.

So far we filled this many cells: 50
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   6   '   7   '       |       '   3   '   5   |   4   '   1   '   2   |  
    |       '       '   8 9 |   8   '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       '       |       ' 1     ' 1     |       '       '       |  
  2 |       '   2   '   3   |   6   ' 4     ' 4     |   7   '   5   '   5   |  
    |     9 '       '       |       '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     |       ' 1     '       |       '       '       |  
  3 |   5   '   4   '       |   2   '       '   7   |       '   3   '   6   |  
    |       '       '   8 9 |       '   8 9 '       |   8 9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   6   |   7   '   2   '   3   |       '   5   '   5   |  
    |       '       '       |       '       '       |   8 9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     ' 1     |       '       ' 1     |  
  5 |   8   '   9   '   2   |   5   ' 4   6 ' 4   6 |   3   '   7   ' 4     |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       | 1     ' 1     ' 1     |       '       ' 1     |  
  6 |   7   '   3   '   5   | 4     ' 4     ' 4     |   6   '   2   ' 4     |  
    |       '       '       |   8   '   8 9 '   8 9 |       '       '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   2   '   8   '   7   |   9   '   5   '     6 |   1   '   4   '   3   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       ' 1     |       ' 1     '       |       '       '       |  
  8 |       '   6   ' 4     |   3   ' 4     '   2   |   5   '       '       |  
    |     9 '       '     9 |       ' 7 8   '       |       '   8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     | 1     ' 1     ' 1     |       '       '       |  
  9 |   3   '   5   ' 4     | 4     ' 4     ' 4     |   2   '   6   '       |  
    |       '       '     9 |   8   ' 7 8   '   8   |       '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 7, 6, 8 ) to 6
Lone in Row    Setting cell ( 1, 3, 1 ) to 9
Lone in Row    Setting cell ( 5, 5, 5 ) to 6
Lone in Column Setting cell ( 3, 3, 1 ) to 8
Lone in Column Setting cell ( 8, 1, 7 ) to 9
Found and set 7 cells this lone representatives search pass.

So far we filled this many cells: 55
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   6   '   7   '   9   |       '   3   '   5   |   4   '   1   '   2   |  
    |       '       '       |   8   '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     '       '       |       ' 1     ' 1     |       '       '       |  
  2 |       '   2   '   3   |   6   ' 4     ' 4     |   7   '   5   '   5   |  
    |       '       '       |       '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     '       |       '       '       |  
  3 |   5   '   4   '   8   |   2   '       '   7   |       '   3   '   6   |  
    |       '       '       |       '     9 '       |     9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   6   |   7   '   2   '   3   |       '   5   '   5   |  
    |       '       '       |       '       '       |   8 9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       ' 1     |       '       ' 1     |  
  5 |   8   '   9   '   2   |   5   '   6   ' 4     |   3   '   7   ' 4     |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       | 1     ' 1     ' 1     |       '       ' 1     |  
  6 |   7   '   3   '   5   | 4     ' 4     ' 4     |   6   '   2   ' 4     |  
    |       '       '       |   8   '   8 9 '   8 9 |       '       '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   2   '   8   '   7   |   9   '   5   '   6   |   1   '   4   '   3   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     |       ' 1     '       |       '       '       |  
  8 |   9   '   6   ' 4     |   3   ' 4     '   2   |   5   '       '       |  
    |       '       '       |       ' 7 8   '       |       '   8   ' 7 8   |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     | 1     ' 1     ' 1     |       '       '       |  
  9 |   3   '   5   ' 4     | 4     ' 4     ' 4     |   2   '   6   '       |  
    |       '       '       |   8   ' 7 8   '   8   |       '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 2, 1, 1 ) to 1
Lone in Box    Setting cell ( 9, 9, 9 ) to 9
Lone in Row    Setting cell ( 3, 5, 2 ) to 1
Lone in Row    Setting cell ( 9, 5, 8 ) to 7
Lone in Row    Setting cell ( 1, 4, 2 ) to 8
Lone in Column Setting cell ( 4, 7, 6 ) to 8
Lone in Column Setting cell ( 8, 9, 9 ) to 7
Found and set 9 cells this lone representatives search pass.

So far we filled this many cells: 62
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   6   '   7   '   9   |   8   '   3   '   5   |   4   '   1   '   2   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   1   '   2   '   3   |   6   ' 4     ' 4     |   7   '   5   '   5   |  
    |       '       '       |       '     9 '     9 |       '   8 9 '   8   |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |   5   '   4   '   8   |   2   '   1   '   7   |       '   3   '   6   |  
    |       '       '       |       '       '       |     9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   6   |   7   '   2   '   3   |   8   '   5   '   5   |  
    |       '       '       |       '       '       |       '     9 '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       ' 1     |       '       ' 1     |  
  5 |   8   '   9   '   2   |   5   '   6   ' 4     |   3   '   7   ' 4     |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       | 1     '       ' 1     |       '       ' 1     |  
  6 |   7   '   3   '   5   | 4     ' 4     ' 4     |   6   '   2   ' 4     |  
    |       '       '       |       '   8 9 '   8 9 |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   2   '   8   '   7   |   9   '   5   '   6   |   1   '   4   '   3   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     |       '       '       |       '       '       |  
  8 |   9   '   6   ' 4     |   3   ' 4     '   2   |   5   '       '   7   |  
    |       '       '       |       '   8   '       |       '   8   '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     | 1     '       ' 1     |       '       '       |  
  9 |   3   '   5   ' 4     | 4     '   7   ' 4     |   2   '   6   '   9   |  
    |       '       '       |       '       '   8   |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 4, 8, 6 ) to 9
Lone in Box    Setting cell ( 8, 8, 9 ) to 8
Lone in Row    Setting cell ( 3, 7, 3 ) to 9
Lone in Row    Setting cell ( 4, 9, 6 ) to 5
Lone in Row    Setting cell ( 2, 9, 3 ) to 8
Lone in Row    Setting cell ( 9, 6, 8 ) to 8
Lone in Row    Setting cell ( 8, 3, 7 ) to 1
Lone in Column Setting cell ( 6, 5, 5 ) to 8
Lone in Column Setting cell ( 9, 3, 7 ) to 4
Lone in Column Setting cell ( 2, 8, 3 ) to 5
Found and set 13 cells this lone representatives search pass.

So far we filled this many cells: 72
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   6   '   7   '   9   |   8   '   3   '   5   |   4   '   1   '   2   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   1   '   2   '   3   |   6   ' 4     ' 4     |   7   '   5   '   8   |  
    |       '       '       |       '     9 '     9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |   5   '   4   '   8   |   2   '   1   '   7   |   9   '   3   '   6   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   6   |   7   '   2   '   3   |   8   '   9   '   5   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       ' 1     |       '       ' 1     |  
  5 |   8   '   9   '   2   |   5   '   6   ' 4     |   3   '   7   ' 4     |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       | 1     '       ' 1     |       '       ' 1     |  
  6 |   7   '   3   '   5   | 4     '   8   ' 4     |   6   '   2   ' 4     |  
    |       '       '       |       '       '     9 |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   2   '   8   '   7   |   9   '   5   '   6   |   1   '   4   '   3   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  8 |   9   '   6   '   1   |   3   ' 4     '   2   |   5   '   8   '   7   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       | 1     '       '       |       '       '       |  
  9 |   3   '   5   '   4   |       '   7   '   8   |   2   '   6   '   9   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 6, 6, 5 ) to 9
Lone in Box    Setting cell ( 9, 4, 8 ) to 1
Lone in Box    Setting cell ( 8, 5, 8 ) to 4
Lone in Row    Setting cell ( 6, 9, 6 ) to 1
Lone in Row    Setting cell ( 2, 6, 2 ) to 4
Lone in Row    Setting cell ( 2, 5, 2 ) to 9
Lone in Column Setting cell ( 5, 9, 6 ) to 4
Lone in Column Setting cell ( 6, 4, 5 ) to 4
Lone in Column Setting cell ( 5, 6, 5 ) to 1
Found and set 12 cells this lone representatives search pass.

So far we filled this many cells: 81
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  1 |   6   '   7   '   9   |   8   '   3   '   5   |   4   '   1   '   2   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   1   '   2   '   3   |   6   '   9   '   4   |   7   '   5   '   8   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  3 |   5   '   4   '   8   |   2   '   1   '   7   |   9   '   3   '   6   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   4   '   1   '   6   |   7   '   2   '   3   |   8   '   9   '   5   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  5 |   8   '   9   '   2   |   5   '   6   '   1   |   3   '   7   '   4   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  6 |   7   '   3   '   5   |   4   '   8   '   9   |   6   '   2   '   1   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   2   '   8   '   7   |   9   '   5   '   6   |   1   '   4   '   3   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  8 |   9   '   6   '   1   |   3   '   4   '   2   |   5   '   8   '   7   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  9 |   3   '   5   '   4   |   1   '   7   '   8   |   2   '   6   '   9   |  
    |       '       '       |       '       '       |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

==== End Pass 2 (progress is 59) ====
We have solved this puzzle.  Final solution is:
679835412123694758548217936416723895892561374735489621287956143961342587354178269
