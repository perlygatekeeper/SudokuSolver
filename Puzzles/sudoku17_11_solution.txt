puzzle_string: 000000012700060000000000050080200000600000400000109000019000000000030800502000000
==== Pass 1 ====
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '     3 |     3 '       '     3 |     3 '       '       |  
  1 | 4     ' 4 5 6 ' 4 5 6 | 4 5   ' 4 5   ' 4 5   |     6 '   1   '   2   |  
    |   8 9 '     9 '   8   | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2 3 ' 1   3 |     3 '       ' 1 2 3 |     3 '     3 '     3 |  
  2 |   7   ' 4 5   ' 4 5   | 4 5   '   6   ' 4 5   |       ' 4     ' 4     |  
    |       '     9 '   8   |   8 9 '       '   8   |     9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2 3 '   2 3 ' 1   3 |     3 ' 1 2   ' 1 2 3 |     3 '       '     3 |  
  3 | 4     ' 4   6 ' 4   6 | 4     ' 4     ' 4     |     6 '   5   ' 4   6 |  
    |   8 9 '     9 '   8   | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    | 1   3 '       ' 1   3 |       '       '     3 | 1   3 '     3 ' 1   3 |  
  4 | 4     '   8   ' 4 5   |   2   ' 4 5   ' 4 5 6 |   5 6 '     6 '   5 6 |  
    |     9 '       ' 7     |       ' 7     ' 7     | 7   9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2 3 ' 1   3 |     3 '       '     3 |       '   2 3 ' 1   3 |  
  5 |   6   '   5   '   5   |   5   '   5   '   5   |   4   '       '   5   |  
    |       ' 7   9 ' 7     | 7 8   ' 7 8   ' 7 8   |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2 3 '     3 |       '       '       |   2 3 '   2 3 '     3 |  
  6 | 4     ' 4 5   ' 4 5   |   1   ' 4 5   '   9   |   5 6 '     6 '   5 6 |  
    |       ' 7     ' 7     |       ' 7 8   '       | 7     ' 7 8   ' 7 8   |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '       '       |       '   2   '   2   |   2 3 '   2 3 '     3 |  
  7 | 4     '   1   '   9   | 4 5 6 ' 4 5   ' 4 5 6 |   5 6 ' 4   6 ' 4 5 6 |  
    |   8   '       '       | 7 8   ' 7 8   ' 7 8   | 7     ' 7     ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       ' 1 2   |       '   2   ' 1     |  
  8 | 4     ' 4   6 ' 4   6 | 4 5 6 '   3   ' 4 5 6 |   8   ' 4   6 ' 4 5 6 |  
    |       ' 7     ' 7     | 7   9 '       ' 7     |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       ' 1     ' 1     | 1   3 '     3 ' 1   3 |  
  9 |   5   ' 4   6 '   2   | 4   6 ' 4     ' 4   6 |     6 ' 4   6 ' 4   6 |  
    |       ' 7     '       | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 ' 7   9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
Looking for Singletons (cells with only one possible value left) :
Setting cell ( 8, 1, 7 ) to 4
Found and set 1 cells this singletons search pass.

So far we filled this many cells: 18
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '     3 |     3 '       '     3 |     3 '       '       |  
  1 |       ' 4 5 6 ' 4 5 6 | 4 5   ' 4 5   ' 4 5   |     6 '   1   '   2   |  
    |   8 9 '     9 '   8   | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2 3 ' 1   3 |     3 '       ' 1 2 3 |     3 '     3 '     3 |  
  2 |   7   ' 4 5   ' 4 5   | 4 5   '   6   ' 4 5   |       ' 4     ' 4     |  
    |       '     9 '   8   |   8 9 '       '   8   |     9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2 3 '   2 3 ' 1   3 |     3 ' 1 2   ' 1 2 3 |     3 '       '     3 |  
  3 |       ' 4   6 ' 4   6 | 4     ' 4     ' 4     |     6 '   5   ' 4   6 |  
    |   8 9 '     9 '   8   | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    | 1   3 '       ' 1   3 |       '       '     3 | 1   3 '     3 ' 1   3 |  
  4 |       '   8   ' 4 5   |   2   ' 4 5   ' 4 5 6 |   5 6 '     6 '   5 6 |  
    |     9 '       ' 7     |       ' 7     ' 7     | 7   9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2 3 ' 1   3 |     3 '       '     3 |       '   2 3 ' 1   3 |  
  5 |   6   '   5   '   5   |   5   '   5   '   5   |   4   '       '   5   |  
    |       ' 7   9 ' 7     | 7 8   ' 7 8   ' 7 8   |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2 3 '     3 |       '       '       |   2 3 '   2 3 '     3 |  
  6 |       ' 4 5   ' 4 5   |   1   ' 4 5   '   9   |   5 6 '     6 '   5 6 |  
    |       ' 7     ' 7     |       ' 7 8   '       | 7     ' 7 8   ' 7 8   |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '       '       |       '   2   '   2   |   2 3 '   2 3 '     3 |  
  7 |       '   1   '   9   | 4 5 6 ' 4 5   ' 4 5 6 |   5 6 ' 4   6 ' 4 5 6 |  
    |   8   '       '       | 7 8   ' 7 8   ' 7 8   | 7     ' 7     ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       ' 1 2   |       '   2   ' 1     |  
  8 |   4   '     6 '     6 |   5 6 '   3   '   5 6 |   8   '     6 '   5 6 |  
    |       ' 7     ' 7     | 7   9 '       ' 7     |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       ' 1     ' 1     | 1   3 '     3 ' 1   3 |  
  9 |   5   '     6 '   2   | 4   6 ' 4     ' 4   6 |     6 ' 4   6 ' 4   6 |  
    |       ' 7     '       | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 ' 7   9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end singletons method ----

Looking for Singletons (cells with only one possible value left) :
Found and set 0 cells this singletons search pass.

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 4, 6, 5 ) to 6
Lone in Box    Setting cell ( 7, 1, 7 ) to 8
Found and set 2 cells this lone representatives search pass.

So far we filled this many cells: 20
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '     3 |     3 '       '     3 |     3 '       '       |  
  1 |       ' 4 5 6 ' 4 5 6 | 4 5   ' 4 5   ' 4 5   |     6 '   1   '   2   |  
    |     9 '     9 '   8   | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2 3 ' 1   3 |     3 '       ' 1 2 3 |     3 '     3 '     3 |  
  2 |   7   ' 4 5   ' 4 5   | 4 5   '   6   ' 4 5   |       ' 4     ' 4     |  
    |       '     9 '   8   |   8 9 '       '   8   |     9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2 3 '   2 3 ' 1   3 |     3 ' 1 2   ' 1 2 3 |     3 '       '     3 |  
  3 |       ' 4   6 ' 4   6 | 4     ' 4     ' 4     |     6 '   5   ' 4   6 |  
    |     9 '     9 '   8   | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    | 1   3 '       ' 1   3 |       '       '       | 1   3 '     3 ' 1   3 |  
  4 |       '   8   ' 4 5   |   2   ' 4 5   '   6   |   5   '       '   5   |  
    |     9 '       ' 7     |       ' 7     '       | 7   9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2 3 ' 1   3 |     3 '       '     3 |       '   2 3 ' 1   3 |  
  5 |   6   '   5   '   5   |   5   '   5   '   5   |   4   '       '   5   |  
    |       ' 7   9 ' 7     | 7 8   ' 7 8   ' 7 8   |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2 3 '     3 |       '       '       |   2 3 '   2 3 '     3 |  
  6 |       ' 4 5   ' 4 5   |   1   ' 4 5   '   9   |   5 6 '     6 '   5 6 |  
    |       ' 7     ' 7     |       ' 7 8   '       | 7     ' 7 8   ' 7 8   |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '   2   '   2   |   2 3 '   2 3 '     3 |  
  7 |   8   '   1   '   9   | 4 5 6 ' 4 5   ' 4 5   |   5 6 ' 4   6 ' 4 5 6 |  
    |       '       '       | 7     ' 7     ' 7     | 7     ' 7     ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       ' 1 2   |       '   2   ' 1     |  
  8 |   4   '     6 '     6 |   5 6 '   3   '   5   |   8   '     6 '   5 6 |  
    |       ' 7     ' 7     | 7   9 '       ' 7     |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '       |       ' 1     ' 1     | 1   3 '     3 ' 1   3 |  
  9 |   5   '     6 '   2   | 4   6 ' 4     ' 4     |     6 ' 4   6 ' 4   6 |  
    |       ' 7     '       | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 ' 7   9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 9, 2, 7 ) to 3
Found and set 1 cells this lone representatives search pass.

So far we filled this many cells: 21
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '       '     3 |     3 '       '     3 |     3 '       '       |  
  1 |       ' 4 5 6 ' 4 5 6 | 4 5   ' 4 5   ' 4 5   |     6 '   1   '   2   |  
    |     9 '     9 '   8   | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   ' 1   3 |     3 '       ' 1 2 3 |     3 '     3 '     3 |  
  2 |   7   ' 4 5   ' 4 5   | 4 5   '   6   ' 4 5   |       ' 4     ' 4     |  
    |       '     9 '   8   |   8 9 '       '   8   |     9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2 3 '   2   ' 1   3 |     3 ' 1 2   ' 1 2 3 |     3 '       '     3 |  
  3 |       ' 4   6 ' 4   6 | 4     ' 4     ' 4     |     6 '   5   ' 4   6 |  
    |     9 '     9 '   8   | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    | 1   3 '       ' 1   3 |       '       '       | 1   3 '     3 ' 1   3 |  
  4 |       '   8   ' 4 5   |   2   ' 4 5   '   6   |   5   '       '   5   |  
    |     9 '       ' 7     |       ' 7     '       | 7   9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   ' 1   3 |     3 '       '     3 |       '   2 3 ' 1   3 |  
  5 |   6   '   5   '   5   |   5   '   5   '   5   |   4   '       '   5   |  
    |       ' 7   9 ' 7     | 7 8   ' 7 8   ' 7 8   |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2   '     3 |       '       '       |   2 3 '   2 3 '     3 |  
  6 |       ' 4 5   ' 4 5   |   1   ' 4 5   '   9   |   5 6 '     6 '   5 6 |  
    |       ' 7     ' 7     |       ' 7 8   '       | 7     ' 7 8   ' 7 8   |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '   2   '   2   |   2 3 '   2 3 '     3 |  
  7 |   8   '   1   '   9   | 4 5 6 ' 4 5   ' 4 5   |   5 6 ' 4   6 ' 4 5 6 |  
    |       '       '       | 7     ' 7     ' 7     | 7     ' 7     ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       ' 1 2   |       '   2   ' 1     |  
  8 |   4   '     6 '     6 |   5 6 '   3   '   5   |   8   '     6 '   5 6 |  
    |       ' 7     ' 7     | 7   9 '       ' 7     |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     ' 1     | 1     '       ' 1     |  
  9 |   5   '   3   '   2   | 4   6 ' 4     ' 4     |     6 ' 4   6 ' 4   6 |  
    |       '       '       | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 ' 7   9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Found and set 0 cells this lone representatives search pass.

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Imaginary value of 3 found in Box 5 all in row 5...   removing it from the cell ( 5, 3, 4 ).
Imaginary value of 3 found in Box 5 all in row 5...   removing it from the cell ( 5, 8, 6 ).
Imaginary value of 3 found in Box 5 all in row 5...   removing it from the cell ( 5, 9, 6 ).
Imaginary value of 4 found in Box 5 all in col 5...   removing it from the cell ( 1, 5, 2 ).
Imaginary value of 4 found in Box 5 all in col 5...   removing it from the cell ( 3, 5, 2 ).
Imaginary value of 4 found in Box 5 all in col 5...   removing it from the cell ( 7, 5, 8 ).
Imaginary value of 4 found in Box 5 all in col 5...   removing it from the cell ( 9, 5, 8 ).
Imaginary value of 6 found in Box 7 all in row 8...   removing it from the cell ( 8, 4, 8 ).
Imaginary value of 6 found in Box 7 all in row 8...   removing it from the cell ( 8, 8, 9 ).
Imaginary value of 6 found in Box 7 all in row 8...   removing it from the cell ( 8, 9, 9 ).
Imaginary value of 7 found in Box 7 all in row 8...   removing it from the cell ( 8, 4, 8 ).
Imaginary value of 7 found in Box 7 all in row 8...   removing it from the cell ( 8, 6, 8 ).
Imaginary value of 7 found in Box 7 all in row 8...   removing it from the cell ( 8, 8, 9 ).
Imaginary value of 7 found in Box 7 all in row 8...   removing it from the cell ( 8, 9, 9 ).
Found and removed 14 possible values from cells via imaginary numbers.

So far we filled this many cells: 21
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '       '     3 |     3 '       '     3 |     3 '       '       |  
  1 |       ' 4 5 6 ' 4 5 6 | 4 5   '   5   ' 4 5   |     6 '   1   '   2   |  
    |     9 '     9 '   8   | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   ' 1   3 |     3 '       ' 1 2 3 |     3 '     3 '     3 |  
  2 |   7   ' 4 5   ' 4 5   | 4 5   '   6   ' 4 5   |       ' 4     ' 4     |  
    |       '     9 '   8   |   8 9 '       '   8   |     9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2 3 '   2   ' 1   3 |     3 ' 1 2   ' 1 2 3 |     3 '       '     3 |  
  3 |       ' 4   6 ' 4   6 | 4     '       ' 4     |     6 '   5   ' 4   6 |  
    |     9 '     9 '   8   | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    | 1   3 '       ' 1   3 |       '       '       | 1   3 '     3 ' 1   3 |  
  4 |       '   8   ' 4 5   |   2   ' 4 5   '   6   |   5   '       '   5   |  
    |     9 '       ' 7     |       ' 7     '       | 7   9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   ' 1     |     3 '       '     3 |       '   2   ' 1     |  
  5 |   6   '   5   '   5   |   5   '   5   '   5   |   4   '       '   5   |  
    |       ' 7   9 ' 7     | 7 8   ' 7 8   ' 7 8   |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2   '     3 |       '       '       |   2 3 '   2 3 '     3 |  
  6 |       ' 4 5   ' 4 5   |   1   ' 4 5   '   9   |   5 6 '     6 '   5 6 |  
    |       ' 7     ' 7     |       ' 7 8   '       | 7     ' 7 8   ' 7 8   |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '   2   '   2   |   2 3 '   2 3 '     3 |  
  7 |   8   '   1   '   9   | 4 5 6 '   5   ' 4 5   |   5 6 ' 4   6 ' 4 5 6 |  
    |       '       '       | 7     ' 7     ' 7     | 7     ' 7     ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       ' 1 2   |       '   2   ' 1     |  
  8 |   4   '     6 '     6 |   5   '   3   '   5   |   8   '       '   5   |  
    |       ' 7     ' 7     |     9 '       '       |       '     9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     ' 1     | 1     '       ' 1     |  
  9 |   5   '   3   '   2   | 4   6 '       ' 4     |     6 ' 4   6 ' 4   6 |  
    |       '       '       | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 ' 7   9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end imaginary values method ----

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Found and removed 0 possible values from cells via imaginary numbers.

Looking for Naked Pairs, any two cells with the same
pair of possible values that exist in the same cluster [row column or box]):
Found and processed 0 naked pairs.

Looking for Hidden Pairs, (any two candidate values which exist 
only in the same two cells in a given cluster):
---- find_hidden_pairs: Start all possibility counts ------
2 col6:1
2 col6:2
6 col6:3
3 col6:5
5 col6:6
6 col6:7
5 col6:9
---- find_hidden_pairs: End   all possibility counts ------
Hidden pair (box): comparing candadate values box4:3 and box4:4.
Hidden pair (box): comparing candadate values box6:6 and box6:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row1:1 and row1:2.
Hidden pair (row): comparing candadate values row4:1 and row4:2.
Hidden pair (row): comparing candadate values row4:1 and row4:3.
Hidden pair (row): comparing candadate values row4:2 and row4:3.
Hidden pair (row): comparing candadate values row7:1 and row7:2.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row7:1 and row7:6.
Hidden pair (row): comparing candadate values row7:1 and row7:7.
Hidden pair (row): comparing candadate values row7:2 and row7:6.
Hidden pair (row): comparing candadate values row7:2 and row7:7.
Hidden pair (row): comparing candadate values row7:6 and row7:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (col): comparing candadate values col0:1 and col0:2.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col4:1 and col4:2.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col4:1 and col4:4.
Hidden pair (col): comparing candadate values col4:2 and col4:4.
Hidden pair (col): comparing candadate values col6:1 and col6:2.
Found and processed 0 hidden pairs.

==== End Pass 1 (progress is 18) ====
==== Pass 2 ====
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '       '     3 |     3 '       '     3 |     3 '       '       |  
  1 |       ' 4 5 6 ' 4 5 6 | 4 5   '   5   ' 4 5   |     6 '   1   '   2   |  
    |     9 '     9 '   8   | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   ' 1   3 |     3 '       ' 1 2 3 |     3 '     3 '     3 |  
  2 |   7   ' 4 5   ' 4 5   | 4 5   '   6   ' 4 5   |       ' 4     ' 4     |  
    |       '     9 '   8   |   8 9 '       '   8   |     9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2 3 '   2   ' 1   3 |     3 ' 1 2   ' 1 2 3 |     3 '       '     3 |  
  3 |       ' 4   6 ' 4   6 | 4     '       ' 4     |     6 '   5   ' 4   6 |  
    |     9 '     9 '   8   | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    | 1   3 '       ' 1   3 |       '       '       | 1   3 '     3 ' 1   3 |  
  4 |       '   8   ' 4 5   |   2   ' 4 5   '   6   |   5   '       '   5   |  
    |     9 '       ' 7     |       ' 7     '       | 7   9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   ' 1     |     3 '       '     3 |       '   2   ' 1     |  
  5 |   6   '   5   '   5   |   5   '   5   '   5   |   4   '       '   5   |  
    |       ' 7   9 ' 7     | 7 8   ' 7 8   ' 7 8   |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2   '     3 |       '       '       |   2 3 '   2 3 '     3 |  
  6 |       ' 4 5   ' 4 5   |   1   ' 4 5   '   9   |   5 6 '     6 '   5 6 |  
    |       ' 7     ' 7     |       ' 7 8   '       | 7     ' 7 8   ' 7 8   |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '   2   '   2   |   2 3 '   2 3 '     3 |  
  7 |   8   '   1   '   9   | 4 5 6 '   5   ' 4 5   |   5 6 ' 4   6 ' 4 5 6 |  
    |       '       '       | 7     ' 7     ' 7     | 7     ' 7     ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       ' 1 2   |       '   2   ' 1     |  
  8 |   4   '     6 '     6 |   5   '   3   '   5   |   8   '       '   5   |  
    |       ' 7     ' 7     |     9 '       '       |       '     9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     ' 1     | 1     '       ' 1     |  
  9 |   5   '   3   '   2   | 4   6 '       ' 4     |     6 ' 4   6 ' 4   6 |  
    |       '       '       | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 ' 7   9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
Looking for Singletons (cells with only one possible value left) :
Found and set 0 cells this singletons search pass.

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Found and set 0 cells this lone representatives search pass.

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Found and removed 0 possible values from cells via imaginary numbers.

Looking for Naked Pairs, any two cells with the same
pair of possible values that exist in the same cluster [row column or box]):
Found and processed 0 naked pairs.

Looking for Hidden Pairs, (any two candidate values which exist 
only in the same two cells in a given cluster):
---- find_hidden_pairs: Start all possibility counts ------
2 col6:1
2 col6:2
6 col6:3
3 col6:5
5 col6:6
6 col6:7
5 col6:9
---- find_hidden_pairs: End   all possibility counts ------
Hidden pair (box): comparing candadate values box4:3 and box4:4.
Hidden pair (box): comparing candadate values box6:6 and box6:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row1:1 and row1:2.
Hidden pair (row): comparing candadate values row4:1 and row4:2.
Hidden pair (row): comparing candadate values row4:1 and row4:3.
Hidden pair (row): comparing candadate values row4:2 and row4:3.
Hidden pair (row): comparing candadate values row7:1 and row7:2.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row7:1 and row7:6.
Hidden pair (row): comparing candadate values row7:1 and row7:7.
Hidden pair (row): comparing candadate values row7:2 and row7:6.
Hidden pair (row): comparing candadate values row7:2 and row7:7.
Hidden pair (row): comparing candadate values row7:6 and row7:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (col): comparing candadate values col0:1 and col0:2.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col4:1 and col4:2.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col4:1 and col4:4.
Hidden pair (col): comparing candadate values col4:2 and col4:4.
Hidden pair (col): comparing candadate values col6:1 and col6:2.
Found and processed 0 hidden pairs.

==== End Pass 2 (progress is 0) ====
We were able to determine 21 cells.
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '       '     3 |     3 '       '     3 |     3 '       '       |  
  1 |       ' 4 5 6 ' 4 5 6 | 4 5   '   5   ' 4 5   |     6 '   1   '   2   |  
    |     9 '     9 '   8   | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   ' 1   3 |     3 '       ' 1 2 3 |     3 '     3 '     3 |  
  2 |   7   ' 4 5   ' 4 5   | 4 5   '   6   ' 4 5   |       ' 4     ' 4     |  
    |       '     9 '   8   |   8 9 '       '   8   |     9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2 3 '   2   ' 1   3 |     3 ' 1 2   ' 1 2 3 |     3 '       '     3 |  
  3 |       ' 4   6 ' 4   6 | 4     '       ' 4     |     6 '   5   ' 4   6 |  
    |     9 '     9 '   8   | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    | 1   3 '       ' 1   3 |       '       '       | 1   3 '     3 ' 1   3 |  
  4 |       '   8   ' 4 5   |   2   ' 4 5   '   6   |   5   '       '   5   |  
    |     9 '       ' 7     |       ' 7     '       | 7   9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   ' 1     |     3 '       '     3 |       '   2   ' 1     |  
  5 |   6   '   5   '   5   |   5   '   5   '   5   |   4   '       '   5   |  
    |       ' 7   9 ' 7     | 7 8   ' 7 8   ' 7 8   |       ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2   '     3 |       '       '       |   2 3 '   2 3 '     3 |  
  6 |       ' 4 5   ' 4 5   |   1   ' 4 5   '   9   |   5 6 '     6 '   5 6 |  
    |       ' 7     ' 7     |       ' 7 8   '       | 7     ' 7 8   ' 7 8   |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '   2   '   2   |   2 3 '   2 3 '     3 |  
  7 |   8   '   1   '   9   | 4 5 6 '   5   ' 4 5   |   5 6 ' 4   6 ' 4 5 6 |  
    |       '       '       | 7     ' 7     ' 7     | 7     ' 7     ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       ' 1 2   |       '   2   ' 1     |  
  8 |   4   '     6 '     6 |   5   '   3   '   5   |   8   '       '   5   |  
    |       ' 7     ' 7     |     9 '       '       |       '     9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       ' 1     ' 1     | 1     '       ' 1     |  
  9 |   5   '   3   '   2   | 4   6 '       ' 4     |     6 ' 4   6 ' 4   6 |  
    |       '       '       | 7 8 9 ' 7 8 9 ' 7 8   | 7   9 ' 7   9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
