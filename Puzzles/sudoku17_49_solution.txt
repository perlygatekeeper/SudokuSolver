puzzle_string: 000000015300600000000000080600050200000001000000000040010200700000760300008000000
==== Pass 1 ====
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   '   2   '   2   |     3 '   2 3 '   2 3 |       '       '       |  
  1 | 4     ' 4   6 ' 4   6 | 4     ' 4     ' 4     | 4   6 '   1   '   5   |  
    | 7 8 9 ' 7 8 9 ' 7   9 |   8 9 ' 7 8 9 ' 7 8 9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   ' 1 2   |       ' 1 2   '   2   |       '   2   '   2   |  
  2 |   3   ' 4 5   ' 4 5   |   6   ' 4     ' 4 5   | 4     '       ' 4     |  
    |       ' 7 8 9 ' 7   9 |       ' 7 8 9 ' 7 8 9 |     9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2   '   2   ' 1 2   | 1   3 ' 1 2 3 '   2 3 |       '       '   2 3 |  
  3 | 4 5   ' 4 5 6 ' 4 5 6 | 4 5   ' 4     ' 4 5   | 4   6 '   8   ' 4   6 |  
    | 7   9 ' 7   9 ' 7   9 |     9 ' 7   9 ' 7   9 |     9 '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '     3 ' 1   3 |     3 '       '     3 |       '     3 ' 1   3 |  
  4 |   6   ' 4     ' 4     | 4     '   5   ' 4     |   2   '       '       |  
    |       ' 7 8 9 ' 7   9 |   8 9 '       ' 7 8 9 |       ' 7   9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2 3 '   2 3 |     3 '   2 3 '       |       '     3 '     3 |  
  5 | 4 5   ' 4 5   ' 4 5   | 4     ' 4     '   1   |   5 6 '   5 6 '     6 |  
    | 7 8 9 ' 7 8 9 ' 7   9 |   8 9 ' 7 8 9 '       |   8 9 ' 7   9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2   '   2 3 ' 1 2 3 |     3 '   2 3 '   2 3 | 1     '       ' 1   3 |  
  6 |   5   '   5   '   5   |       '       '     6 |   5 6 '   4   '     6 |  
    | 7 8 9 ' 7 8 9 ' 7   9 |   8 9 ' 7 8 9 ' 7 8 9 |   8 9 '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '     3 |       '     3 '     3 |       '       '       |  
  7 | 4 5   '   1   ' 4 5 6 |   2   ' 4     ' 4 5   |   7   '   5 6 ' 4   6 |  
    |     9 '       '     9 |       '   8 9 '   8 9 |       '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2   '   2   |       '       '       |       '   2   ' 1 2   |  
  8 | 4 5   ' 4 5   ' 4 5   |   7   '   6   ' 4 5   |   3   '   5   ' 4     |  
    |     9 '     9 '     9 |       '       '   8 9 |       '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2 3 '       | 1   3 ' 1   3 '     3 | 1     '   2   ' 1 2   |  
  9 | 4 5   ' 4 5 6 '   8   | 4 5   ' 4     ' 4 5   | 4 5 6 '   5 6 ' 4   6 |  
    | 7   9 ' 7   9 '       |     9 '     9 '     9 |     9 '     9 '     9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
Looking for Singletons (cells with only one possible value left) :
Found and set 0 cells this singletons search pass.

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 3, 9, 3 ) to 3
Lone in Box    Setting cell ( 6, 6, 5 ) to 6
Lone in Row    Setting cell ( 8, 9, 9 ) to 1
Lone in Column Setting cell ( 6, 7, 6 ) to 1
Found and set 5 cells this lone representatives search pass.

So far we filled this many cells: 21
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   '   2   '   2   |     3 '   2 3 '   2 3 |       '       '       |  
  1 | 4     ' 4   6 ' 4   6 | 4     ' 4     ' 4     | 4   6 '   1   '   5   |  
    | 7 8 9 ' 7 8 9 ' 7   9 |   8 9 ' 7 8 9 ' 7 8 9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   ' 1 2   |       ' 1 2   '   2   |       '   2   '   2   |  
  2 |   3   ' 4 5   ' 4 5   |   6   ' 4     ' 4 5   | 4     '       ' 4     |  
    |       ' 7 8 9 ' 7   9 |       ' 7 8 9 ' 7 8 9 |     9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2   '   2   ' 1 2   | 1     ' 1 2   '   2   |       '       '       |  
  3 | 4 5   ' 4 5 6 ' 4 5 6 | 4 5   ' 4     ' 4 5   | 4   6 '   8   '   3   |  
    | 7   9 ' 7   9 ' 7   9 |     9 ' 7   9 ' 7   9 |     9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '     3 ' 1   3 |     3 '       '     3 |       '     3 '       |  
  4 |   6   ' 4     ' 4     | 4     '   5   ' 4     |   2   '       '       |  
    |       ' 7 8 9 ' 7   9 |   8 9 '       ' 7 8 9 |       ' 7   9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2 3 '   2 3 |     3 '   2 3 '       |       '     3 '       |  
  5 | 4 5   ' 4 5   ' 4 5   | 4     ' 4     '   1   |   5 6 '   5 6 '     6 |  
    | 7 8 9 ' 7 8 9 ' 7   9 |   8 9 ' 7 8 9 '       |   8 9 ' 7   9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2 3 '   2 3 |     3 '   2 3 '       |       '       '       |  
  6 |   5   '   5   '   5   |       '       '   6   |   1   '   4   '       |  
    | 7 8 9 ' 7 8 9 ' 7   9 |   8 9 ' 7 8 9 '       |       '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '     3 |       '     3 '     3 |       '       '       |  
  7 | 4 5   '   1   ' 4 5 6 |   2   ' 4     ' 4 5   |   7   '   5 6 ' 4   6 |  
    |     9 '       '     9 |       '   8 9 '   8 9 |       '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2   '   2   |       '       '       |       '   2   '       |  
  8 | 4 5   ' 4 5   ' 4 5   |   7   '   6   ' 4 5   |   3   '   5   '   1   |  
    |     9 '     9 '     9 |       '       '   8 9 |       '     9 '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2 3 '       | 1   3 ' 1   3 '     3 |       '   2   '   2   |  
  9 | 4 5   ' 4 5 6 '   8   | 4 5   ' 4     ' 4 5   | 4 5 6 '   5 6 ' 4   6 |  
    | 7   9 ' 7   9 '       |     9 '     9 '     9 |     9 '     9 '     9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 4, 3, 4 ) to 1
Lone in Box    Setting cell ( 7, 9, 9 ) to 8
Lone in Row    Setting cell ( 8, 6, 8 ) to 8
Lone in Row    Setting cell ( 2, 5, 2 ) to 1
Lone in Column Setting cell ( 9, 4, 8 ) to 1
Lone in Column Setting cell ( 5, 7, 6 ) to 8
Lone in Column Setting cell ( 3, 1, 1 ) to 1
Found and set 10 cells this lone representatives search pass.

So far we filled this many cells: 28
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   '   2   '   2   |     3 '   2 3 '   2 3 |       '       '       |  
  1 | 4     ' 4   6 ' 4   6 | 4     ' 4     ' 4     | 4   6 '   1   '   5   |  
    | 7 8 9 ' 7 8 9 ' 7   9 |   8 9 ' 7 8 9 ' 7   9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '       '   2   |       '   2   '   2   |  
  2 |   3   ' 4 5   ' 4 5   |   6   '   1   ' 4 5   | 4     '       ' 4     |  
    |       ' 7 8 9 ' 7   9 |       '       ' 7   9 |     9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '   2   '   2   |       '       '       |  
  3 |   1   ' 4 5 6 ' 4 5 6 | 4 5   ' 4     ' 4 5   | 4   6 '   8   '   3   |  
    |       ' 7   9 ' 7   9 |     9 ' 7   9 ' 7   9 |     9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '     3 '       |     3 '       '     3 |       '     3 '       |  
  4 |   6   ' 4     '   1   | 4     '   5   ' 4     |   2   '       '       |  
    |       ' 7 8 9 '       |   8 9 '       ' 7   9 |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2 3 '   2 3 |     3 '   2 3 '       |       '     3 '       |  
  5 | 4 5   ' 4 5   ' 4 5   | 4     ' 4     '   1   |   8   '   5 6 '     6 |  
    | 7   9 ' 7   9 ' 7   9 |     9 ' 7   9 '       |       ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2 3 '   2 3 |     3 '   2 3 '       |       '       '       |  
  6 |   5   '   5   '   5   |       '       '   6   |   1   '   4   '       |  
    | 7 8 9 ' 7 8 9 ' 7   9 |   8 9 ' 7 8 9 '       |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '     3 |       '     3 '     3 |       '       '       |  
  7 | 4 5   '   1   ' 4 5 6 |   2   ' 4     ' 4 5   |   7   '   5 6 '   8   |  
    |     9 '       '     9 |       '     9 '     9 |       '     9 '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2   '   2   |       '       '       |       '   2   '       |  
  8 | 4 5   ' 4 5   ' 4 5   |   7   '   6   '   8   |   3   '   5   '   1   |  
    |     9 '     9 '     9 |       '       '       |       '     9 '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2 3 '       |       '     3 '     3 |       '   2   '   2   |  
  9 | 4 5   ' 4 5 6 '   8   |   1   ' 4     ' 4 5   | 4 5 6 '   5 6 ' 4   6 |  
    | 7   9 ' 7   9 '       |       '     9 '     9 |     9 '     9 '     9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 5, 8, 6 ) to 5
Lone in Row    Setting cell ( 2, 2, 1 ) to 8
Lone in Row    Setting cell ( 5, 9, 6 ) to 6
Lone in Column Setting cell ( 4, 8, 6 ) to 3
Lone in Column Setting cell ( 3, 4, 2 ) to 5
Lone in Column Setting cell ( 9, 7, 9 ) to 5
Lone in Column Setting cell ( 6, 1, 4 ) to 8
Found and set 11 cells this lone representatives search pass.

So far we filled this many cells: 35
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   '   2   '   2   |     3 '   2 3 '   2 3 |       '       '       |  
  1 | 4     ' 4   6 ' 4   6 | 4     ' 4     ' 4     | 4   6 '   1   '   5   |  
    | 7   9 ' 7   9 ' 7   9 |   8 9 ' 7 8 9 ' 7   9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '   2   |       '       '   2   |       '   2   '   2   |  
  2 |   3   '   8   ' 4 5   |   6   '   1   ' 4     | 4     '       ' 4     |  
    |       '       ' 7   9 |       '       ' 7   9 |     9 ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '   2   '   2   |       '       '       |  
  3 |   1   ' 4   6 ' 4   6 |   5   ' 4     ' 4     | 4   6 '   8   '   3   |  
    |       ' 7   9 ' 7   9 |       ' 7   9 ' 7   9 |     9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   6   ' 4     '   1   | 4     '   5   ' 4     |   2   '   3   '       |  
    |       ' 7   9 '       |   8 9 '       ' 7   9 |       '       ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2 3 '   2 3 |     3 '   2 3 '       |       '       '       |  
  5 | 4     ' 4     ' 4     | 4     ' 4     '   1   |   8   '   5   '   6   |  
    | 7   9 ' 7   9 ' 7   9 |     9 ' 7   9 '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2 3 '   2 3 |     3 '   2 3 '       |       '       '       |  
  6 |   8   '   5   '   5   |       '       '   6   |   1   '   4   '       |  
    |       ' 7   9 ' 7   9 |     9 ' 7   9 '       |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '     3 |       '     3 '     3 |       '       '       |  
  7 | 4 5   '   1   ' 4 5 6 |   2   ' 4     ' 4 5   |   7   '     6 '   8   |  
    |     9 '       '     9 |       '     9 '     9 |       '     9 '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2   '   2   |       '       '       |       '   2   '       |  
  8 | 4 5   ' 4 5   ' 4 5   |   7   '   6   '   8   |   3   '       '   1   |  
    |     9 '     9 '     9 |       '       '       |       '     9 '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2 3 '       |       '     3 '     3 |       '   2   '   2   |  
  9 | 4     ' 4   6 '   8   |   1   ' 4     ' 4     |   5   '     6 ' 4     |  
    | 7   9 ' 7   9 '       |       '     9 '     9 |       '     9 '     9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 2, 3, 1 ) to 5
Lone in Box    Setting cell ( 4, 4, 5 ) to 8
Lone in Box    Setting cell ( 7, 6, 8 ) to 5
Lone in Box    Setting cell ( 9, 9, 9 ) to 4
Lone in Row    Setting cell ( 1, 5, 2 ) to 8
Lone in Row    Setting cell ( 6, 2, 4 ) to 5
Lone in Column Setting cell ( 2, 8, 3 ) to 7
Lone in Column Setting cell ( 2, 9, 3 ) to 2
Lone in Column Setting cell ( 8, 1, 7 ) to 5
Found and set 12 cells this lone representatives search pass.

So far we filled this many cells: 44
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   '   2   '   2   |     3 '       '   2 3 |       '       '       |  
  1 | 4     ' 4   6 ' 4   6 | 4     '   8   ' 4     | 4   6 '   1   '   5   |  
    | 7   9 ' 7   9 ' 7   9 |     9 '       ' 7   9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   3   '   8   '   5   |   6   '   1   ' 4     | 4     '   7   '   2   |  
    |       '       '       |       '       '     9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '   2   '   2   |       '       '       |  
  3 |   1   ' 4   6 ' 4   6 |   5   ' 4     ' 4     | 4   6 '   8   '   3   |  
    |       ' 7   9 ' 7   9 |       ' 7   9 ' 7   9 |     9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   6   ' 4     '   1   |   8   '   5   ' 4     |   2   '   3   '       |  
    |       ' 7   9 '       |       '       ' 7   9 |       '       ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2 3 '   2 3 |     3 '   2 3 '       |       '       '       |  
  5 | 4     ' 4     ' 4     | 4     ' 4     '   1   |   8   '   5   '   6   |  
    | 7   9 ' 7   9 ' 7   9 |     9 ' 7   9 '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '   2 3 |     3 '   2 3 '       |       '       '       |  
  6 |   8   '   5   '       |       '       '   6   |   1   '   4   '       |  
    |       '       ' 7   9 |     9 ' 7   9 '       |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '     3 |       '     3 '       |       '       '       |  
  7 | 4     '   1   ' 4   6 |   2   ' 4     '   5   |   7   '     6 '   8   |  
    |     9 '       '     9 |       '     9 '       |       '     9 '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '       '       |       '   2   '       |  
  8 |   5   ' 4     ' 4     |   7   '   6   '   8   |   3   '       '   1   |  
    |       '     9 '     9 |       '       '       |       '     9 '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2 3 '       |       '     3 '     3 |       '   2   '       |  
  9 |       '     6 '   8   |   1   '       '       |   5   '     6 '   4   |  
    | 7   9 ' 7   9 '       |       '     9 '     9 |       '     9 '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 7, 5, 8 ) to 4
Lone in Row    Setting cell ( 7, 3, 7 ) to 3
Lone in Column Setting cell ( 5, 2, 4 ) to 3
Found and set 4 cells this lone representatives search pass.

So far we filled this many cells: 47
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   '   2   '   2   |     3 '       '   2 3 |       '       '       |  
  1 | 4     ' 4   6 ' 4   6 | 4     '   8   ' 4     | 4   6 '   1   '   5   |  
    | 7   9 ' 7   9 ' 7   9 |     9 '       ' 7   9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   3   '   8   '   5   |   6   '   1   ' 4     | 4     '   7   '   2   |  
    |       '       '       |       '       '     9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '   2   '   2   |       '       '       |  
  3 |   1   ' 4   6 ' 4   6 |   5   '       ' 4     | 4   6 '   8   '   3   |  
    |       ' 7   9 ' 7   9 |       ' 7   9 ' 7   9 |     9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   6   ' 4     '   1   |   8   '   5   ' 4     |   2   '   3   '       |  
    |       ' 7   9 '       |       '       ' 7   9 |       '       ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |       '   2   '       |       '       '       |  
  5 | 4     '   3   ' 4     | 4     '       '   1   |   8   '   5   '   6   |  
    | 7   9 '       ' 7   9 |     9 ' 7   9 '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '   2   |     3 '   2 3 '       |       '       '       |  
  6 |   8   '   5   '       |       '       '   6   |   1   '   4   '       |  
    |       '       ' 7   9 |     9 ' 7   9 '       |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |       '   1   '   3   |   2   '   4   '   5   |   7   '     6 '   8   |  
    |     9 '       '       |       '       '       |       '     9 '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '       '       |       '   2   '       |  
  8 |   5   ' 4     ' 4     |   7   '   6   '   8   |   3   '       '   1   |  
    |       '     9 '     9 |       '       '       |       '     9 '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2   '       |       '     3 '     3 |       '   2   '       |  
  9 |       '     6 '   8   |   1   '       '       |   5   '     6 '   4   |  
    | 7   9 ' 7   9 '       |       '     9 '     9 |       '     9 '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 9, 2, 7 ) to 6
Lone in Row    Setting cell ( 7, 8, 9 ) to 6
Lone in Row    Setting cell ( 9, 1, 7 ) to 7
Found and set 3 cells this lone representatives search pass.

So far we filled this many cells: 50
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   '   2   '   2   |     3 '       '   2 3 |       '       '       |  
  1 | 4     ' 4     ' 4   6 | 4     '   8   ' 4     | 4   6 '   1   '   5   |  
    |     9 ' 7   9 ' 7   9 |     9 '       ' 7   9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   3   '   8   '   5   |   6   '   1   ' 4     | 4     '   7   '   2   |  
    |       '       '       |       '       '     9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '   2   '   2   |       '       '       |  
  3 |   1   ' 4     ' 4   6 |   5   '       ' 4     | 4   6 '   8   '   3   |  
    |       ' 7   9 ' 7   9 |       ' 7   9 ' 7   9 |     9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   6   ' 4     '   1   |   8   '   5   ' 4     |   2   '   3   '       |  
    |       ' 7   9 '       |       '       ' 7   9 |       '       ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |       '   2   '       |       '       '       |  
  5 | 4     '   3   ' 4     | 4     '       '   1   |   8   '   5   '   6   |  
    |     9 '       ' 7   9 |     9 ' 7   9 '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '   2   |     3 '   2 3 '       |       '       '       |  
  6 |   8   '   5   '       |       '       '   6   |   1   '   4   '       |  
    |       '       ' 7   9 |     9 ' 7   9 '       |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |       '   1   '   3   |   2   '   4   '   5   |   7   '   6   '   8   |  
    |     9 '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '       '       |       '   2   '       |  
  8 |   5   ' 4     ' 4     |   7   '   6   '   8   |   3   '       '   1   |  
    |       '     9 '     9 |       '       '       |       '     9 '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '     3 '     3 |       '   2   '       |  
  9 |   7   '   6   '   8   |   1   '       '       |   5   '       '   4   |  
    |       '       '       |       '     9 '     9 |       '     9 '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Row    Setting cell ( 9, 8, 9 ) to 2
Lone in Row    Setting cell ( 7, 1, 7 ) to 9
Lone in Column Setting cell ( 8, 8, 9 ) to 9
Found and set 4 cells this lone representatives search pass.

So far we filled this many cells: 53
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   '   2   '   2   |     3 '       '   2 3 |       '       '       |  
  1 | 4     ' 4     ' 4   6 | 4     '   8   ' 4     | 4   6 '   1   '   5   |  
    |       ' 7   9 ' 7   9 |     9 '       ' 7   9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   3   '   8   '   5   |   6   '   1   ' 4     | 4     '   7   '   2   |  
    |       '       '       |       '       '     9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '   2   '   2   |       '       '       |  
  3 |   1   ' 4     ' 4   6 |   5   '       ' 4     | 4   6 '   8   '   3   |  
    |       ' 7   9 ' 7   9 |       ' 7   9 ' 7   9 |     9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   6   ' 4     '   1   |   8   '   5   ' 4     |   2   '   3   '       |  
    |       ' 7   9 '       |       '       ' 7   9 |       '       ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |       '   2   '       |       '       '       |  
  5 | 4     '   3   ' 4     | 4     '       '   1   |   8   '   5   '   6   |  
    |       '       ' 7   9 |     9 ' 7   9 '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '   2   |     3 '   2 3 '       |       '       '       |  
  6 |   8   '   5   '       |       '       '   6   |   1   '   4   '       |  
    |       '       ' 7   9 |     9 ' 7   9 '       |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   9   '   1   '   3   |   2   '   4   '   5   |   7   '   6   '   8   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '       '       |       '       '       |  
  8 |   5   ' 4     ' 4     |   7   '   6   '   8   |   3   '   9   '   1   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '     3 '     3 |       '       '       |  
  9 |   7   '   6   '   8   |   1   '       '       |   5   '   2   '   4   |  
    |       '       '       |       '     9 '     9 |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Found and set 0 cells this lone representatives search pass.

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Imaginary value of 2 found in Box 5 all in col 5...   removing it from the cell ( 3, 5, 2 ).
Found and removed 1 possible values from cells via imaginary numbers.

So far we filled this many cells: 53
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   '   2   '   2   |     3 '       '   2 3 |       '       '       |  
  1 | 4     ' 4     ' 4   6 | 4     '   8   ' 4     | 4   6 '   1   '   5   |  
    |       ' 7   9 ' 7   9 |     9 '       ' 7   9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   3   '   8   '   5   |   6   '   1   ' 4     | 4     '   7   '   2   |  
    |       '       '       |       '       '     9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '       '   2   |       '       '       |  
  3 |   1   ' 4     ' 4   6 |   5   '       ' 4     | 4   6 '   8   '   3   |  
    |       ' 7   9 ' 7   9 |       ' 7   9 ' 7   9 |     9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   6   ' 4     '   1   |   8   '   5   ' 4     |   2   '   3   '       |  
    |       ' 7   9 '       |       '       ' 7   9 |       '       ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |       '   2   '       |       '       '       |  
  5 | 4     '   3   ' 4     | 4     '       '   1   |   8   '   5   '   6   |  
    |       '       ' 7   9 |     9 ' 7   9 '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '   2   |     3 '   2 3 '       |       '       '       |  
  6 |   8   '   5   '       |       '       '   6   |   1   '   4   '       |  
    |       '       ' 7   9 |     9 ' 7   9 '       |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   9   '   1   '   3   |   2   '   4   '   5   |   7   '   6   '   8   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '       '       |       '       '       |  
  8 |   5   ' 4     ' 4     |   7   '   6   '   8   |   3   '   9   '   1   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '     3 '     3 |       '       '       |  
  9 |   7   '   6   '   8   |   1   '       '       |   5   '   2   '   4   |  
    |       '       '       |       '     9 '     9 |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end imaginary values processing ----

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Found and removed 0 possible values from cells via imaginary numbers.

Looking for Naked Pairs, any two cells with the same
pair of possible values that exist in the same cluster [row column or box]):
Found and processed 0 naked pairs.

Looking for Hidden Pairs, (any two candidate values which exist 
only in the same two cells in a given cluster):
Hidden pair (box): comparing candadate values box1:2 and box1:3.
Hidden pair (box): comparing candadate values box4:2 and box4:3.
Hidden pair (box): comparing candadate values box4:2 and box4:4.
Hidden pair (box): comparing candadate values box4:3 and box4:4.
Hidden pair (box): comparing candadate values box5:7 and box5:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (box): comparing candadate values box6:2 and box6:4.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (box): comparing candadate values box7:3 and box7:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row0:3 and row0:6.
Hidden pair (row): comparing candadate values row1:4 and row1:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row5:2 and row5:3.
Hidden pair (row): comparing candadate values row7:2 and row7:4.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row8:3 and row8:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (col): comparing candadate values col0:2 and col0:4.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (col): comparing candadate values col3:3 and col3:4.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col4:2 and col4:3.
Hidden pair (col): comparing candadate values col5:2 and col5:3.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col8:7 and col8:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Found and processed 0 hidden pairs.

==== End Pass 1 (progress is 50) ====
==== Pass 2 ====
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   '   2   '   2   |     3 '       '   2 3 |       '       '       |  
  1 | 4     ' 4     ' 4   6 | 4     '   8   ' 4     | 4   6 '   1   '   5   |  
    |       ' 7   9 ' 7   9 |     9 '       ' 7   9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   3   '   8   '   5   |   6   '   1   ' 4     | 4     '   7   '   2   |  
    |       '       '       |       '       '     9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '       '   2   |       '       '       |  
  3 |   1   ' 4     ' 4   6 |   5   '       ' 4     | 4   6 '   8   '   3   |  
    |       ' 7   9 ' 7   9 |       ' 7   9 ' 7   9 |     9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   6   ' 4     '   1   |   8   '   5   ' 4     |   2   '   3   '       |  
    |       ' 7   9 '       |       '       ' 7   9 |       '       ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |       '   2   '       |       '       '       |  
  5 | 4     '   3   ' 4     | 4     '       '   1   |   8   '   5   '   6   |  
    |       '       ' 7   9 |     9 ' 7   9 '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '   2   |     3 '   2 3 '       |       '       '       |  
  6 |   8   '   5   '       |       '       '   6   |   1   '   4   '       |  
    |       '       ' 7   9 |     9 ' 7   9 '       |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   9   '   1   '   3   |   2   '   4   '   5   |   7   '   6   '   8   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '       '       |       '       '       |  
  8 |   5   ' 4     ' 4     |   7   '   6   '   8   |   3   '   9   '   1   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '     3 '     3 |       '       '       |  
  9 |   7   '   6   '   8   |   1   '       '       |   5   '   2   '   4   |  
    |       '       '       |       '     9 '     9 |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
Looking for Singletons (cells with only one possible value left) :
Found and set 0 cells this singletons search pass.

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Found and set 0 cells this lone representatives search pass.

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Found and removed 0 possible values from cells via imaginary numbers.

Looking for Naked Pairs, any two cells with the same
pair of possible values that exist in the same cluster [row column or box]):
Found and processed 0 naked pairs.

Looking for Hidden Pairs, (any two candidate values which exist 
only in the same two cells in a given cluster):
Hidden pair (box): comparing candadate values box1:2 and box1:3.
Hidden pair (box): comparing candadate values box4:2 and box4:3.
Hidden pair (box): comparing candadate values box4:2 and box4:4.
Hidden pair (box): comparing candadate values box4:3 and box4:4.
Hidden pair (box): comparing candadate values box5:7 and box5:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (box): comparing candadate values box6:2 and box6:4.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (box): comparing candadate values box7:3 and box7:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row0:3 and row0:6.
Hidden pair (row): comparing candadate values row1:4 and row1:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row5:2 and row5:3.
Hidden pair (row): comparing candadate values row7:2 and row7:4.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row8:3 and row8:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (col): comparing candadate values col0:2 and col0:4.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (col): comparing candadate values col3:3 and col3:4.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col4:2 and col4:3.
Hidden pair (col): comparing candadate values col5:2 and col5:3.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col8:7 and col8:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Found and processed 0 hidden pairs.

==== End Pass 2 (progress is 0) ====
We were able to determine 53 cells.
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   '   2   '   2   |     3 '       '   2 3 |       '       '       |  
  1 | 4     ' 4     ' 4   6 | 4     '   8   ' 4     | 4   6 '   1   '   5   |  
    |       ' 7   9 ' 7   9 |     9 '       ' 7   9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '       '       |       '       '       |  
  2 |   3   '   8   '   5   |   6   '   1   ' 4     | 4     '   7   '   2   |  
    |       '       '       |       '       '     9 |     9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '       '   2   |       '       '       |  
  3 |   1   ' 4     ' 4   6 |   5   '       ' 4     | 4   6 '   8   '   3   |  
    |       ' 7   9 ' 7   9 |       ' 7   9 ' 7   9 |     9 '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  4 |   6   ' 4     '   1   |   8   '   5   ' 4     |   2   '   3   '       |  
    |       ' 7   9 '       |       '       ' 7   9 |       '       ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |       '   2   '       |       '       '       |  
  5 | 4     '   3   ' 4     | 4     '       '   1   |   8   '   5   '   6   |  
    |       '       ' 7   9 |     9 ' 7   9 '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '   2   |     3 '   2 3 '       |       '       '       |  
  6 |   8   '   5   '       |       '       '   6   |   1   '   4   '       |  
    |       '       ' 7   9 |     9 ' 7   9 '       |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       '       '       |       '       '       |  
  7 |   9   '   1   '   3   |   2   '   4   '   5   |   7   '   6   '   8   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '   2   '   2   |       '       '       |       '       '       |  
  8 |   5   ' 4     ' 4     |   7   '   6   '   8   |   3   '   9   '   1   |  
    |       '       '       |       '       '       |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |       '     3 '     3 |       '       '       |  
  9 |   7   '   6   '   8   |   1   '       '       |   5   '   2   '   4   |  
    |       '       '       |       '     9 '     9 |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
