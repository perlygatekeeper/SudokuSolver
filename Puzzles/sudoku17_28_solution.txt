puzzle_string: 000000014000000203800050000000207000031000000000000650600000700000140000000300000
==== Pass 1 ====
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2 3 '   2   '   2 3 |       '   2 3 '   2 3 |       '       '       |  
  1 |   5   '   5 6 '   5 6 |     6 '     6 '     6 |   5   '   1   '   4   |  
    | 7   9 ' 7   9 ' 7   9 | 7 8 9 ' 7 8 9 '   8 9 |   8 9 '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     ' 1     '       |       ' 1     ' 1     |       '       '       |  
  2 | 4 5   ' 4 5 6 ' 4 5 6 | 4   6 '     6 ' 4   6 |   2   '     6 '   3   |  
    | 7   9 ' 7   9 ' 7   9 | 7 8 9 ' 7 8 9 '   8 9 |       ' 7 8 9 '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       ' 1 2   '   2 3 |       '       ' 1 2 3 |       '       '       |  
  3 |   8   ' 4   6 ' 4   6 | 4   6 '   5   ' 4   6 |       '     6 '     6 |  
    |       ' 7   9 ' 7   9 | 7   9 '       '     9 |     9 ' 7   9 ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       ' 1   3 '       | 1   3 '     3 ' 1     |  
  4 | 4 5   ' 4 5 6 ' 4 5 6 |   2   '     6 '   7   | 4     ' 4     '       |  
    |     9 '   8 9 '   8 9 |       '   8 9 '       |   8 9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '       |       '       '       |       '   2   '   2   |  
  5 | 4 5   '   3   '   1   | 4 5 6 '     6 ' 4 5 6 | 4     ' 4     '       |  
    | 7   9 '       '       |   8 9 '   8 9 '   8 9 |   8 9 ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2   '   2   |       ' 1   3 ' 1   3 |       '       ' 1 2   |  
  6 | 4     ' 4     ' 4     | 4     '       ' 4     |   6   '   5   '       |  
    | 7   9 ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |       '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       ' 1 2   '   2 3 |       '   2   '   2   |       '   2 3 ' 1 2   |  
  7 |   6   ' 4 5   ' 4 5   |   5   '       '   5   |   7   ' 4     '   5   |  
    |       '   8 9 '   8 9 |   8 9 '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2   '   2 3 |       '       '   2   |     3 '   2 3 '   2   |  
  8 |   5   '   5   '   5   |   1   '   4   '   5 6 |   5   '     6 '   5 6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       '       '   8 9 |   8 9 '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2   ' 1 2   '   2   |       '   2   '   2   | 1     '   2   ' 1 2   |  
  9 | 4 5   ' 4 5   ' 4 5   |   3   '     6 '   5 6 | 4 5   ' 4   6 '   5 6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       ' 7 8 9 '   8 9 |   8 9 '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
Looking for Singletons (cells with only one possible value left) :
Setting cell ( 3, 7, 3 ) to 9
Found and set 1 cells this singletons search pass.

So far we filled this many cells: 18
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2 3 '   2   '   2 3 |       '   2 3 '   2 3 |       '       '       |  
  1 |   5   '   5 6 '   5 6 |     6 '     6 '     6 |   5   '   1   '   4   |  
    | 7   9 ' 7   9 ' 7   9 | 7 8 9 ' 7 8 9 '   8 9 |   8   '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     ' 1     '       |       ' 1     ' 1     |       '       '       |  
  2 | 4 5   ' 4 5 6 ' 4 5 6 | 4   6 '     6 ' 4   6 |   2   '     6 '   3   |  
    | 7   9 ' 7   9 ' 7   9 | 7 8 9 ' 7 8 9 '   8 9 |       ' 7 8   '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       ' 1 2   '   2 3 |       '       ' 1 2 3 |       '       '       |  
  3 |   8   ' 4   6 ' 4   6 | 4   6 '   5   ' 4   6 |   9   '     6 '     6 |  
    |       ' 7     ' 7     | 7     '       '       |       ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       ' 1   3 '       | 1   3 '     3 ' 1     |  
  4 | 4 5   ' 4 5 6 ' 4 5 6 |   2   '     6 '   7   | 4     ' 4     '       |  
    |     9 '   8 9 '   8 9 |       '   8 9 '       |   8   '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '       |       '       '       |       '   2   '   2   |  
  5 | 4 5   '   3   '   1   | 4 5 6 '     6 ' 4 5 6 | 4     ' 4     '       |  
    | 7   9 '       '       |   8 9 '   8 9 '   8 9 |   8   ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2   '   2   |       ' 1   3 ' 1   3 |       '       ' 1 2   |  
  6 | 4     ' 4     ' 4     | 4     '       ' 4     |   6   '   5   '       |  
    | 7   9 ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |       '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       ' 1 2   '   2 3 |       '   2   '   2   |       '   2 3 ' 1 2   |  
  7 |   6   ' 4 5   ' 4 5   |   5   '       '   5   |   7   ' 4     '   5   |  
    |       '   8 9 '   8 9 |   8 9 '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2   '   2 3 |       '       '   2   |     3 '   2 3 '   2   |  
  8 |   5   '   5   '   5   |   1   '   4   '   5 6 |   5   '     6 '   5 6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       '       '   8 9 |   8   '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2   ' 1 2   '   2   |       '   2   '   2   | 1     '   2   ' 1 2   |  
  9 | 4 5   ' 4 5   ' 4 5   |   3   '     6 '   5 6 | 4 5   ' 4   6 '   5 6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       ' 7 8 9 '   8 9 |   8   '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end singletons method ----

Looking for Singletons (cells with only one possible value left) :
Found and set 0 cells this singletons search pass.

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 1, 7, 3 ) to 5
Lone in Box    Setting cell ( 9, 5, 8 ) to 7
Found and set 2 cells this lone representatives search pass.

So far we filled this many cells: 20
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2 3 '   2   '   2 3 |       '   2 3 '   2 3 |       '       '       |  
  1 |       '     6 '     6 |     6 '     6 '     6 |   5   '   1   '   4   |  
    | 7   9 ' 7   9 ' 7   9 | 7 8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     ' 1     '       |       ' 1     ' 1     |       '       '       |  
  2 | 4 5   ' 4 5 6 ' 4 5 6 | 4   6 '     6 ' 4   6 |   2   '     6 '   3   |  
    | 7   9 ' 7   9 ' 7   9 | 7 8 9 '   8 9 '   8 9 |       ' 7 8   '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       ' 1 2   '   2 3 |       '       ' 1 2 3 |       '       '       |  
  3 |   8   ' 4   6 ' 4   6 | 4   6 '   5   ' 4   6 |   9   '     6 '     6 |  
    |       ' 7     ' 7     | 7     '       '       |       ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       ' 1   3 '       | 1   3 '     3 ' 1     |  
  4 | 4 5   ' 4 5 6 ' 4 5 6 |   2   '     6 '   7   | 4     ' 4     '       |  
    |     9 '   8 9 '   8 9 |       '   8 9 '       |   8   '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '       |       '       '       |       '   2   '   2   |  
  5 | 4 5   '   3   '   1   | 4 5 6 '     6 ' 4 5 6 | 4     ' 4     '       |  
    | 7   9 '       '       |   8 9 '   8 9 '   8 9 |   8   ' 7 8 9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2   '   2   |       ' 1   3 ' 1   3 |       '       ' 1 2   |  
  6 | 4     ' 4     ' 4     | 4     '       ' 4     |   6   '   5   '       |  
    | 7   9 ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |       '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       ' 1 2   '   2 3 |       '   2   '   2   |       '   2 3 ' 1 2   |  
  7 |   6   ' 4 5   ' 4 5   |   5   '       '   5   |   7   ' 4     '   5   |  
    |       '   8 9 '   8 9 |   8 9 '   8 9 '   8 9 |       '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2   '   2 3 |       '       '   2   |     3 '   2 3 '   2   |  
  8 |   5   '   5   '   5   |   1   '   4   '   5 6 |       '     6 '   5 6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       '       '   8 9 |   8   '   8 9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2   ' 1 2   '   2   |       '       '   2   | 1     '   2   ' 1 2   |  
  9 | 4 5   ' 4 5   ' 4 5   |   3   '   7   '   5 6 | 4     ' 4   6 '   5 6 |  
    |     9 '   8 9 '   8 9 |       '       '   8 9 |   8   '   8 9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 2, 8, 3 ) to 8
Found and set 1 cells this lone representatives search pass.

So far we filled this many cells: 21
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2 3 '   2   '   2 3 |       '   2 3 '   2 3 |       '       '       |  
  1 |       '     6 '     6 |     6 '     6 '     6 |   5   '   1   '   4   |  
    | 7   9 ' 7   9 ' 7   9 | 7 8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     ' 1     '       |       ' 1     ' 1     |       '       '       |  
  2 | 4 5   ' 4 5 6 ' 4 5 6 | 4   6 '     6 ' 4   6 |   2   '   8   '   3   |  
    | 7   9 ' 7   9 ' 7   9 | 7   9 '     9 '     9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       ' 1 2   '   2 3 |       '       ' 1 2 3 |       '       '       |  
  3 |   8   ' 4   6 ' 4   6 | 4   6 '   5   ' 4   6 |   9   '     6 '     6 |  
    |       ' 7     ' 7     | 7     '       '       |       ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       ' 1   3 '       | 1   3 '     3 ' 1     |  
  4 | 4 5   ' 4 5 6 ' 4 5 6 |   2   '     6 '   7   | 4     ' 4     '       |  
    |     9 '   8 9 '   8 9 |       '   8 9 '       |   8   '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '       |       '       '       |       '   2   '   2   |  
  5 | 4 5   '   3   '   1   | 4 5 6 '     6 ' 4 5 6 | 4     ' 4     '       |  
    | 7   9 '       '       |   8 9 '   8 9 '   8 9 |   8   ' 7   9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2   '   2   |       ' 1   3 ' 1   3 |       '       ' 1 2   |  
  6 | 4     ' 4     ' 4     | 4     '       ' 4     |   6   '   5   '       |  
    | 7   9 ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |       '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       ' 1 2   '   2 3 |       '   2   '   2   |       '   2 3 ' 1 2   |  
  7 |   6   ' 4 5   ' 4 5   |   5   '       '   5   |   7   ' 4     '   5   |  
    |       '   8 9 '   8 9 |   8 9 '   8 9 '   8 9 |       '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2   '   2 3 |       '       '   2   |     3 '   2 3 '   2   |  
  8 |   5   '   5   '   5   |   1   '   4   '   5 6 |       '     6 '   5 6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       '       '   8 9 |   8   '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2   ' 1 2   '   2   |       '       '   2   | 1     '   2   ' 1 2   |  
  9 | 4 5   ' 4 5   ' 4 5   |   3   '   7   '   5 6 | 4     ' 4   6 '   5 6 |  
    |     9 '   8 9 '   8 9 |       '       '   8 9 |   8   '     9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Found and set 0 cells this lone representatives search pass.

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Imaginary value of 6 found in Box 3 all in row 3...   removing it from the cell ( 3, 2, 1 ).
Imaginary value of 6 found in Box 3 all in row 3...   removing it from the cell ( 3, 3, 1 ).
Imaginary value of 6 found in Box 3 all in row 3...   removing it from the cell ( 3, 4, 2 ).
Imaginary value of 6 found in Box 3 all in row 3...   removing it from the cell ( 3, 6, 2 ).
Imaginary value of 7 found in Box 3 all in row 3...   removing it from the cell ( 3, 2, 1 ).
Imaginary value of 7 found in Box 3 all in row 3...   removing it from the cell ( 3, 3, 1 ).
Imaginary value of 7 found in Box 3 all in row 3...   removing it from the cell ( 3, 4, 2 ).
Imaginary value of 6 found in Box 4 all in row 4...   removing it from the cell ( 4, 5, 5 ).
Imaginary value of 5 found in Box 5 all in row 5...   removing it from the cell ( 5, 1, 4 ).
Imaginary value of 3 found in Box 6 all in row 4...   removing it from the cell ( 4, 5, 5 ).
Imaginary value of 6 found in Box 8 all in col 6...   removing it from the cell ( 1, 6, 2 ).
Imaginary value of 6 found in Box 8 all in col 6...   removing it from the cell ( 2, 6, 2 ).
Imaginary value of 6 found in Box 8 all in col 6...   removing it from the cell ( 3, 6, 2 ).
Imaginary value of 6 found in Box 8 all in col 6...   removing it from the cell ( 5, 6, 5 ).
Found and removed 14 possible values from cells via imaginary numbers.

So far we filled this many cells: 21
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2 3 '   2   '   2 3 |       '   2 3 '   2 3 |       '       '       |  
  1 |       '     6 '     6 |     6 '     6 '       |   5   '   1   '   4   |  
    | 7   9 ' 7   9 ' 7   9 | 7 8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     ' 1     '       |       ' 1     ' 1     |       '       '       |  
  2 | 4 5   ' 4 5 6 ' 4 5 6 | 4   6 '     6 ' 4     |   2   '   8   '   3   |  
    | 7   9 ' 7   9 ' 7   9 | 7   9 '     9 '     9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       ' 1 2   '   2 3 |       '       ' 1 2 3 |       '       '       |  
  3 |   8   ' 4     ' 4     | 4     '   5   ' 4     |   9   '     6 '     6 |  
    |       '       '       |       '       '       |       ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       ' 1     '       | 1   3 '     3 ' 1     |  
  4 | 4 5   ' 4 5 6 ' 4 5 6 |   2   '       '   7   | 4     ' 4     '       |  
    |     9 '   8 9 '   8 9 |       '   8 9 '       |   8   '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '       |       '       '       |       '   2   '   2   |  
  5 | 4     '   3   '   1   | 4 5 6 '     6 ' 4 5   | 4     ' 4     '       |  
    | 7   9 '       '       |   8 9 '   8 9 '   8 9 |   8   ' 7   9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2   '   2   |       ' 1   3 ' 1   3 |       '       ' 1 2   |  
  6 | 4     ' 4     ' 4     | 4     '       ' 4     |   6   '   5   '       |  
    | 7   9 ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |       '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       ' 1 2   '   2 3 |       '   2   '   2   |       '   2 3 ' 1 2   |  
  7 |   6   ' 4 5   ' 4 5   |   5   '       '   5   |   7   ' 4     '   5   |  
    |       '   8 9 '   8 9 |   8 9 '   8 9 '   8 9 |       '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2   '   2 3 |       '       '   2   |     3 '   2 3 '   2   |  
  8 |   5   '   5   '   5   |   1   '   4   '   5 6 |       '     6 '   5 6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       '       '   8 9 |   8   '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2   ' 1 2   '   2   |       '       '   2   | 1     '   2   ' 1 2   |  
  9 | 4 5   ' 4 5   ' 4 5   |   3   '   7   '   5 6 | 4     ' 4   6 '   5 6 |  
    |     9 '   8 9 '   8 9 |       '       '   8 9 |   8   '     9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end imaginary values processing ----

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Found and removed 0 possible values from cells via imaginary numbers.

Looking for Naked Pairs, any two cells with the same
pair of possible values that exist in the same cluster [row column or box]):
Found and processed 0 naked pairs.

Looking for Hidden Pairs, (any two candidate values which exist 
only in the same two cells in a given cluster):
Hidden pair (box): comparing candadate values box2:6 and box2:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (box): comparing candadate values box4:3 and box4:5.
Hidden pair (box): comparing candadate values box4:3 and box4:6.
Hidden pair (box): comparing candadate values box4:5 and box4:6.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row2:1 and row2:3.
Hidden pair (row): comparing candadate values row2:1 and row2:6.
Hidden pair (row): comparing candadate values row2:1 and row2:7.
Hidden pair (row): comparing candadate values row2:3 and row2:6.
Hidden pair (row): comparing candadate values row2:3 and row2:7.
Hidden pair (row): comparing candadate values row2:6 and row2:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row3:3 and row3:6.
Hidden pair (row): comparing candadate values row4:5 and row4:6.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row6:1 and row6:3.
Hidden pair (col): comparing candadate values col0:1 and col0:3.
Hidden pair (col): comparing candadate values col3:5 and col3:7.
Hidden pair (col): comparing candadate values col4:2 and col4:3.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col6:1 and col6:3.
Two candidate values shared first cell.
Found and processed 0 hidden pairs.

==== End Pass 1 (progress is 18) ====
==== Pass 2 ====
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2 3 '   2   '   2 3 |       '   2 3 '   2 3 |       '       '       |  
  1 |       '     6 '     6 |     6 '     6 '       |   5   '   1   '   4   |  
    | 7   9 ' 7   9 ' 7   9 | 7 8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     ' 1     '       |       ' 1     ' 1     |       '       '       |  
  2 | 4 5   ' 4 5 6 ' 4 5 6 | 4   6 '     6 ' 4     |   2   '   8   '   3   |  
    | 7   9 ' 7   9 ' 7   9 | 7   9 '     9 '     9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       ' 1 2   '   2 3 |       '       ' 1 2 3 |       '       '       |  
  3 |   8   ' 4     ' 4     | 4     '   5   ' 4     |   9   '     6 '     6 |  
    |       '       '       |       '       '       |       ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       ' 1     '       | 1   3 '     3 ' 1     |  
  4 | 4 5   ' 4 5 6 ' 4 5 6 |   2   '       '   7   | 4     ' 4     '       |  
    |     9 '   8 9 '   8 9 |       '   8 9 '       |   8   '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '       |       '       '       |       '   2   '   2   |  
  5 | 4     '   3   '   1   | 4 5 6 '     6 ' 4 5   | 4     ' 4     '       |  
    | 7   9 '       '       |   8 9 '   8 9 '   8 9 |   8   ' 7   9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2   '   2   |       ' 1   3 ' 1   3 |       '       ' 1 2   |  
  6 | 4     ' 4     ' 4     | 4     '       ' 4     |   6   '   5   '       |  
    | 7   9 ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |       '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       ' 1 2   '   2 3 |       '   2   '   2   |       '   2 3 ' 1 2   |  
  7 |   6   ' 4 5   ' 4 5   |   5   '       '   5   |   7   ' 4     '   5   |  
    |       '   8 9 '   8 9 |   8 9 '   8 9 '   8 9 |       '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2   '   2 3 |       '       '   2   |     3 '   2 3 '   2   |  
  8 |   5   '   5   '   5   |   1   '   4   '   5 6 |       '     6 '   5 6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       '       '   8 9 |   8   '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2   ' 1 2   '   2   |       '       '   2   | 1     '   2   ' 1 2   |  
  9 | 4 5   ' 4 5   ' 4 5   |   3   '   7   '   5 6 | 4     ' 4   6 '   5 6 |  
    |     9 '   8 9 '   8 9 |       '       '   8 9 |   8   '     9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
Looking for Singletons (cells with only one possible value left) :
Setting cell ( 3, 4, 2 ) to 4
Found and set 1 cells this singletons search pass.

So far we filled this many cells: 22
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2 3 '   2   '   2 3 |       '   2 3 '   2 3 |       '       '       |  
  1 |       '     6 '     6 |     6 '     6 '       |   5   '   1   '   4   |  
    | 7   9 ' 7   9 ' 7   9 | 7 8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     ' 1     '       |       ' 1     ' 1     |       '       '       |  
  2 | 4 5   ' 4 5 6 ' 4 5 6 |     6 '     6 '       |   2   '   8   '   3   |  
    | 7   9 ' 7   9 ' 7   9 | 7   9 '     9 '     9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       ' 1 2   '   2 3 |       '       ' 1 2 3 |       '       '       |  
  3 |   8   '       '       |   4   '   5   '       |   9   '     6 '     6 |  
    |       '       '       |       '       '       |       ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       ' 1     '       | 1   3 '     3 ' 1     |  
  4 | 4 5   ' 4 5 6 ' 4 5 6 |   2   '       '   7   | 4     ' 4     '       |  
    |     9 '   8 9 '   8 9 |       '   8 9 '       |   8   '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '       |       '       '       |       '   2   '   2   |  
  5 | 4     '   3   '   1   |   5 6 '     6 ' 4 5   | 4     ' 4     '       |  
    | 7   9 '       '       |   8 9 '   8 9 '   8 9 |   8   ' 7   9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2   '   2   |       ' 1   3 ' 1   3 |       '       ' 1 2   |  
  6 | 4     ' 4     ' 4     |       '       ' 4     |   6   '   5   '       |  
    | 7   9 ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |       '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       ' 1 2   '   2 3 |       '   2   '   2   |       '   2 3 ' 1 2   |  
  7 |   6   ' 4 5   ' 4 5   |   5   '       '   5   |   7   ' 4     '   5   |  
    |       '   8 9 '   8 9 |   8 9 '   8 9 '   8 9 |       '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2   '   2 3 |       '       '   2   |     3 '   2 3 '   2   |  
  8 |   5   '   5   '   5   |   1   '   4   '   5 6 |       '     6 '   5 6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       '       '   8 9 |   8   '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2   ' 1 2   '   2   |       '       '   2   | 1     '   2   ' 1 2   |  
  9 | 4 5   ' 4 5   ' 4 5   |   3   '   7   '   5 6 | 4     ' 4   6 '   5 6 |  
    |     9 '   8 9 '   8 9 |       '       '   8 9 |   8   '     9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end singletons method ----

Looking for Singletons (cells with only one possible value left) :
Found and set 0 cells this singletons search pass.

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Found and set 0 cells this lone representatives search pass.

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Found and removed 0 possible values from cells via imaginary numbers.

Looking for Naked Pairs, any two cells with the same
pair of possible values that exist in the same cluster [row column or box]):
Found and processed 0 naked pairs.

Looking for Hidden Pairs, (any two candidate values which exist 
only in the same two cells in a given cluster):
Hidden pair (box): comparing candadate values box2:6 and box2:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (box): comparing candadate values box4:3 and box4:4.
Hidden pair (box): comparing candadate values box4:3 and box4:5.
Hidden pair (box): comparing candadate values box4:3 and box4:6.
Hidden pair (box): comparing candadate values box4:4 and box4:5.
Hidden pair (box): comparing candadate values box4:4 and box4:6.
Hidden pair (box): comparing candadate values box4:5 and box4:6.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row2:1 and row2:3.
Hidden pair (row): comparing candadate values row2:1 and row2:6.
Hidden pair (row): comparing candadate values row2:1 and row2:7.
Hidden pair (row): comparing candadate values row2:3 and row2:6.
Hidden pair (row): comparing candadate values row2:3 and row2:7.
Hidden pair (row): comparing candadate values row2:6 and row2:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row3:3 and row3:6.
Hidden pair (row): comparing candadate values row4:5 and row4:6.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row6:1 and row6:3.
Hidden pair (col): comparing candadate values col0:1 and col0:3.
Hidden pair (col): comparing candadate values col3:5 and col3:7.
Hidden pair (col): comparing candadate values col4:2 and col4:3.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col5:4 and col5:6.
Hidden pair (col): comparing candadate values col6:1 and col6:3.
Two candidate values shared first cell.
Found and processed 0 hidden pairs.

==== End Pass 2 (progress is 1) ====
==== Pass 3 ====
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2 3 '   2   '   2 3 |       '   2 3 '   2 3 |       '       '       |  
  1 |       '     6 '     6 |     6 '     6 '       |   5   '   1   '   4   |  
    | 7   9 ' 7   9 ' 7   9 | 7 8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     ' 1     '       |       ' 1     ' 1     |       '       '       |  
  2 | 4 5   ' 4 5 6 ' 4 5 6 |     6 '     6 '       |   2   '   8   '   3   |  
    | 7   9 ' 7   9 ' 7   9 | 7   9 '     9 '     9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       ' 1 2   '   2 3 |       '       ' 1 2 3 |       '       '       |  
  3 |   8   '       '       |   4   '   5   '       |   9   '     6 '     6 |  
    |       '       '       |       '       '       |       ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       ' 1     '       | 1   3 '     3 ' 1     |  
  4 | 4 5   ' 4 5 6 ' 4 5 6 |   2   '       '   7   | 4     ' 4     '       |  
    |     9 '   8 9 '   8 9 |       '   8 9 '       |   8   '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '       |       '       '       |       '   2   '   2   |  
  5 | 4     '   3   '   1   |   5 6 '     6 ' 4 5   | 4     ' 4     '       |  
    | 7   9 '       '       |   8 9 '   8 9 '   8 9 |   8   ' 7   9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2   '   2   |       ' 1   3 ' 1   3 |       '       ' 1 2   |  
  6 | 4     ' 4     ' 4     |       '       ' 4     |   6   '   5   '       |  
    | 7   9 ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |       '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       ' 1 2   '   2 3 |       '   2   '   2   |       '   2 3 ' 1 2   |  
  7 |   6   ' 4 5   ' 4 5   |   5   '       '   5   |   7   ' 4     '   5   |  
    |       '   8 9 '   8 9 |   8 9 '   8 9 '   8 9 |       '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2   '   2 3 |       '       '   2   |     3 '   2 3 '   2   |  
  8 |   5   '   5   '   5   |   1   '   4   '   5 6 |       '     6 '   5 6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       '       '   8 9 |   8   '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2   ' 1 2   '   2   |       '       '   2   | 1     '   2   ' 1 2   |  
  9 | 4 5   ' 4 5   ' 4 5   |   3   '   7   '   5 6 | 4     ' 4   6 '   5 6 |  
    |     9 '   8 9 '   8 9 |       '       '   8 9 |   8   '     9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
Looking for Singletons (cells with only one possible value left) :
Found and set 0 cells this singletons search pass.

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Found and set 0 cells this lone representatives search pass.

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Found and removed 0 possible values from cells via imaginary numbers.

Looking for Naked Pairs, any two cells with the same
pair of possible values that exist in the same cluster [row column or box]):
Found and processed 0 naked pairs.

Looking for Hidden Pairs, (any two candidate values which exist 
only in the same two cells in a given cluster):
Hidden pair (box): comparing candadate values box2:6 and box2:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (box): comparing candadate values box4:3 and box4:4.
Hidden pair (box): comparing candadate values box4:3 and box4:5.
Hidden pair (box): comparing candadate values box4:3 and box4:6.
Hidden pair (box): comparing candadate values box4:4 and box4:5.
Hidden pair (box): comparing candadate values box4:4 and box4:6.
Hidden pair (box): comparing candadate values box4:5 and box4:6.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row2:1 and row2:3.
Hidden pair (row): comparing candadate values row2:1 and row2:6.
Hidden pair (row): comparing candadate values row2:1 and row2:7.
Hidden pair (row): comparing candadate values row2:3 and row2:6.
Hidden pair (row): comparing candadate values row2:3 and row2:7.
Hidden pair (row): comparing candadate values row2:6 and row2:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row3:3 and row3:6.
Hidden pair (row): comparing candadate values row4:5 and row4:6.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row6:1 and row6:3.
Hidden pair (col): comparing candadate values col0:1 and col0:3.
Hidden pair (col): comparing candadate values col3:5 and col3:7.
Hidden pair (col): comparing candadate values col4:2 and col4:3.
Two candidate values shared first cell.
Hidden pair (col): comparing candadate values col5:4 and col5:6.
Hidden pair (col): comparing candadate values col6:1 and col6:3.
Two candidate values shared first cell.
Found and processed 0 hidden pairs.

==== End Pass 3 (progress is 0) ====
We were able to determine 22 cells.
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2 3 '   2   '   2 3 |       '   2 3 '   2 3 |       '       '       |  
  1 |       '     6 '     6 |     6 '     6 '       |   5   '   1   '   4   |  
    | 7   9 ' 7   9 ' 7   9 | 7 8 9 '   8 9 '   8 9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1     ' 1     '       |       ' 1     ' 1     |       '       '       |  
  2 | 4 5   ' 4 5 6 ' 4 5 6 |     6 '     6 '       |   2   '   8   '   3   |  
    | 7   9 ' 7   9 ' 7   9 | 7   9 '     9 '     9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       ' 1 2   '   2 3 |       '       ' 1 2 3 |       '       '       |  
  3 |   8   '       '       |   4   '   5   '       |   9   '     6 '     6 |  
    |       '       '       |       '       '       |       ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '       |       ' 1     '       | 1   3 '     3 ' 1     |  
  4 | 4 5   ' 4 5 6 ' 4 5 6 |   2   '       '   7   | 4     ' 4     '       |  
    |     9 '   8 9 '   8 9 |       '   8 9 '       |   8   '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '       |       '       '       |       '   2   '   2   |  
  5 | 4     '   3   '   1   |   5 6 '     6 ' 4 5   | 4     ' 4     '       |  
    | 7   9 '       '       |   8 9 '   8 9 '   8 9 |   8   ' 7   9 ' 7 8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '   2   '   2   |       ' 1   3 ' 1   3 |       '       ' 1 2   |  
  6 | 4     ' 4     ' 4     |       '       ' 4     |   6   '   5   '       |  
    | 7   9 ' 7 8 9 ' 7 8 9 |   8 9 '   8 9 '   8 9 |       '       ' 7 8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       ' 1 2   '   2 3 |       '   2   '   2   |       '   2 3 ' 1 2   |  
  7 |   6   ' 4 5   ' 4 5   |   5   '       '   5   |   7   ' 4     '   5   |  
    |       '   8 9 '   8 9 |   8 9 '   8 9 '   8 9 |       '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2 3 '   2   '   2 3 |       '       '   2   |     3 '   2 3 '   2   |  
  8 |   5   '   5   '   5   |   1   '   4   '   5 6 |       '     6 '   5 6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       '       '   8 9 |   8   '     9 '   8 9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    | 1 2   ' 1 2   '   2   |       '       '   2   | 1     '   2   ' 1 2   |  
  9 | 4 5   ' 4 5   ' 4 5   |   3   '   7   '   5 6 | 4     ' 4   6 '   5 6 |  
    |     9 '   8 9 '   8 9 |       '       '   8 9 |   8   '     9 '   8 9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
