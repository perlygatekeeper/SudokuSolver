puzzle_string: 000000015020060000000000408003000900000100000000008000150400000000070300800000060
==== Pass 1 ====
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |   2 3 '   2 3 '   2 3 |   2   '       '       |  
  1 | 4   6 ' 4   6 ' 4   6 |       ' 4     ' 4     |     6 '   1   '   5   |  
    | 7   9 ' 7 8 9 ' 7 8 9 | 7 8 9 '   8 9 ' 7   9 | 7     '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '       ' 1     |     3 '       ' 1   3 |       '     3 '     3 |  
  2 | 4 5   '   2   ' 4 5   |   5   '   6   ' 4 5   |       '       '       |  
    | 7   9 '       ' 7 8 9 | 7 8 9 '       ' 7   9 | 7     ' 7   9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 ' 1   3 ' 1     |   2 3 ' 1 2 3 ' 1 2 3 |       '   2 3 '       |  
  3 |   5 6 '     6 '   5 6 |   5   '   5   '   5   |   4   '       '   8   |  
    | 7   9 ' 7   9 ' 7   9 | 7   9 '     9 ' 7   9 |       ' 7   9 '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   ' 1     '       |   2   '   2   '   2   |       '   2   ' 1 2   |  
  4 | 4 5 6 ' 4   6 '   3   |   5 6 ' 4 5   ' 4 5 6 |   9   ' 4 5   ' 4   6 |  
    | 7     ' 7 8   '       | 7     '       ' 7     |       ' 7 8   ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |       '   2 3 '   2 3 |   2   '   2 3 '   2 3 |  
  5 | 4 5 6 ' 4   6 ' 4 5 6 |   1   ' 4 5   ' 4 5 6 |   5 6 ' 4 5   ' 4   6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       '     9 ' 7   9 | 7 8   ' 7 8   ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   ' 1     ' 1 2   |   2 3 '   2 3 '       | 1 2   '   2 3 ' 1 2 3 |  
  6 | 4 5 6 ' 4   6 ' 4 5 6 |   5 6 ' 4 5   '   8   |   5 6 ' 4 5   ' 4   6 |  
    | 7   9 ' 7   9 ' 7   9 | 7   9 '     9 '       | 7     ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '   2   |       '   2 3 '   2 3 |   2   '   2   '   2   |  
  7 |   1   '   5   '     6 |   4   '       '     6 |       '       '       |  
    |       '       ' 7   9 |       '   8 9 '     9 | 7 8   ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |   2   '       ' 1 2   |       '   2   ' 1 2   |  
  8 | 4   6 ' 4   6 ' 4   6 |   5 6 '   7   '   5 6 |   3   ' 4 5   ' 4     |  
    |     9 '     9 '     9 |   8 9 '       '     9 |       '   8 9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '   2   |   2 3 ' 1 2 3 ' 1 2 3 | 1 2   '       ' 1 2   |  
  9 |   8   ' 4     ' 4     |   5   '   5   '   5   |   5   '   6   ' 4     |  
    |       ' 7   9 ' 7   9 |     9 '     9 '     9 | 7     '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
Looking for Singletons (cells with only one possible value left) :
Setting cell ( 2, 7, 3 ) to 7
Found and set 1 cells this singletons search pass.

So far we filled this many cells: 18
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '     3 '       |   2 3 '   2 3 '   2 3 |   2   '       '       |  
  1 | 4   6 ' 4   6 ' 4   6 |       ' 4     ' 4     |     6 '   1   '   5   |  
    | 7   9 ' 7 8 9 ' 7 8 9 | 7 8 9 '   8 9 ' 7   9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '       ' 1     |     3 '       ' 1   3 |       '     3 '     3 |  
  2 | 4 5   '   2   ' 4 5   |   5   '   6   ' 4 5   |   7   '       '       |  
    |     9 '       '   8 9 |   8 9 '       '     9 |       '     9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 ' 1   3 ' 1     |   2 3 ' 1 2 3 ' 1 2 3 |       '   2 3 '       |  
  3 |   5 6 '     6 '   5 6 |   5   '   5   '   5   |   4   '       '   8   |  
    | 7   9 ' 7   9 ' 7   9 | 7   9 '     9 ' 7   9 |       '     9 '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   ' 1     '       |   2   '   2   '   2   |       '   2   ' 1 2   |  
  4 | 4 5 6 ' 4   6 '   3   |   5 6 ' 4 5   ' 4 5 6 |   9   ' 4 5   ' 4   6 |  
    | 7     ' 7 8   '       | 7     '       ' 7     |       ' 7 8   ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |       '   2 3 '   2 3 |   2   '   2 3 '   2 3 |  
  5 | 4 5 6 ' 4   6 ' 4 5 6 |   1   ' 4 5   ' 4 5 6 |   5 6 ' 4 5   ' 4   6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       '     9 ' 7   9 |   8   ' 7 8   ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   ' 1     ' 1 2   |   2 3 '   2 3 '       | 1 2   '   2 3 ' 1 2 3 |  
  6 | 4 5 6 ' 4   6 ' 4 5 6 |   5 6 ' 4 5   '   8   |   5 6 ' 4 5   ' 4   6 |  
    | 7   9 ' 7   9 ' 7   9 | 7   9 '     9 '       |       ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '   2   |       '   2 3 '   2 3 |   2   '   2   '   2   |  
  7 |   1   '   5   '     6 |   4   '       '     6 |       '       '       |  
    |       '       ' 7   9 |       '   8 9 '     9 |   8   ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |   2   '       ' 1 2   |       '   2   ' 1 2   |  
  8 | 4   6 ' 4   6 ' 4   6 |   5 6 '   7   '   5 6 |   3   ' 4 5   ' 4     |  
    |     9 '     9 '     9 |   8 9 '       '     9 |       '   8 9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '     3 '   2   |   2 3 ' 1 2 3 ' 1 2 3 | 1 2   '       ' 1 2   |  
  9 |   8   ' 4     ' 4     |   5   '   5   '   5   |   5   '   6   ' 4     |  
    |       ' 7   9 ' 7   9 |     9 '     9 '     9 |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end singletons method ----

Looking for Singletons (cells with only one possible value left) :
Found and set 0 cells this singletons search pass.

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 1, 7, 3 ) to 6
Lone in Box    Setting cell ( 9, 2, 7 ) to 3
Found and set 2 cells this lone representatives search pass.

So far we filled this many cells: 20
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '       '       |   2 3 '   2 3 '   2 3 |       '       '       |  
  1 | 4     ' 4     ' 4     |       ' 4     ' 4     |   6   '   1   '   5   |  
    | 7   9 ' 7 8 9 ' 7 8 9 | 7 8 9 '   8 9 ' 7   9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '       ' 1     |     3 '       ' 1   3 |       '     3 '     3 |  
  2 | 4 5   '   2   ' 4 5   |   5   '   6   ' 4 5   |   7   '       '       |  
    |     9 '       '   8 9 |   8 9 '       '     9 |       '     9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 ' 1     ' 1     |   2 3 ' 1 2 3 ' 1 2 3 |       '   2 3 '       |  
  3 |   5 6 '     6 '   5 6 |   5   '   5   '   5   |   4   '       '   8   |  
    | 7   9 ' 7   9 ' 7   9 | 7   9 '     9 ' 7   9 |       '     9 '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   ' 1     '       |   2   '   2   '   2   |       '   2   ' 1 2   |  
  4 | 4 5 6 ' 4   6 '   3   |   5 6 ' 4 5   ' 4 5 6 |   9   ' 4 5   ' 4   6 |  
    | 7     ' 7 8   '       | 7     '       ' 7     |       ' 7 8   ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |       '   2 3 '   2 3 |   2   '   2 3 '   2 3 |  
  5 | 4 5 6 ' 4   6 ' 4 5 6 |   1   ' 4 5   ' 4 5 6 |   5   ' 4 5   ' 4   6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       '     9 ' 7   9 |   8   ' 7 8   ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   ' 1     ' 1 2   |   2 3 '   2 3 '       | 1 2   '   2 3 ' 1 2 3 |  
  6 | 4 5 6 ' 4   6 ' 4 5 6 |   5 6 ' 4 5   '   8   |   5   ' 4 5   ' 4   6 |  
    | 7   9 ' 7   9 ' 7   9 | 7   9 '     9 '       |       ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '   2   |       '   2 3 '   2 3 |   2   '   2   '   2   |  
  7 |   1   '   5   '     6 |   4   '       '     6 |       '       '       |  
    |       '       ' 7   9 |       '   8 9 '     9 |   8   ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |   2   '       ' 1 2   |       '   2   ' 1 2   |  
  8 | 4   6 ' 4   6 ' 4   6 |   5 6 '   7   '   5 6 |   3   ' 4 5   ' 4     |  
    |     9 '     9 '     9 |   8 9 '       '     9 |       '   8 9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '   2   |   2   ' 1 2   ' 1 2   | 1 2   '       ' 1 2   |  
  9 |   8   '   3   ' 4     |   5   '   5   '   5   |   5   '   6   ' 4     |  
    |       '       ' 7   9 |     9 '     9 '     9 |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Lone in Box    Setting cell ( 3, 8, 3 ) to 2
Found and set 1 cells this lone representatives search pass.

So far we filled this many cells: 21
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '       '       |   2 3 '   2 3 '   2 3 |       '       '       |  
  1 | 4     ' 4     ' 4     |       ' 4     ' 4     |   6   '   1   '   5   |  
    | 7   9 ' 7 8 9 ' 7 8 9 | 7 8 9 '   8 9 ' 7   9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 '       ' 1     |     3 '       ' 1   3 |       '     3 '     3 |  
  2 | 4 5   '   2   ' 4 5   |   5   '   6   ' 4 5   |   7   '       '       |  
    |     9 '       '   8 9 |   8 9 '       '     9 |       '     9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 ' 1     ' 1     |     3 ' 1   3 ' 1   3 |       '       '       |  
  3 |   5 6 '     6 '   5 6 |   5   '   5   '   5   |   4   '   2   '   8   |  
    | 7   9 ' 7   9 ' 7   9 | 7   9 '     9 ' 7   9 |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   ' 1     '       |   2   '   2   '   2   |       '       ' 1 2   |  
  4 | 4 5 6 ' 4   6 '   3   |   5 6 ' 4 5   ' 4 5 6 |   9   ' 4 5   ' 4   6 |  
    | 7     ' 7 8   '       | 7     '       ' 7     |       ' 7 8   ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |       '   2 3 '   2 3 |   2   '     3 '   2 3 |  
  5 | 4 5 6 ' 4   6 ' 4 5 6 |   1   ' 4 5   ' 4 5 6 |   5   ' 4 5   ' 4   6 |  
    | 7   9 ' 7 8 9 ' 7 8 9 |       '     9 ' 7   9 |   8   ' 7 8   ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   ' 1     ' 1 2   |   2 3 '   2 3 '       | 1 2   '     3 ' 1 2 3 |  
  6 | 4 5 6 ' 4   6 ' 4 5 6 |   5 6 ' 4 5   '   8   |   5   ' 4 5   ' 4   6 |  
    | 7   9 ' 7   9 ' 7   9 | 7   9 '     9 '       |       ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '   2   |       '   2 3 '   2 3 |   2   '       '   2   |  
  7 |   1   '   5   '     6 |   4   '       '     6 |       '       '       |  
    |       '       ' 7   9 |       '   8 9 '     9 |   8   ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |   2   '       ' 1 2   |       '       ' 1 2   |  
  8 | 4   6 ' 4   6 ' 4   6 |   5 6 '   7   '   5 6 |   3   ' 4 5   ' 4     |  
    |     9 '     9 '     9 |   8 9 '       '     9 |       '   8 9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '   2   |   2   ' 1 2   ' 1 2   | 1 2   '       ' 1 2   |  
  9 |   8   '   3   ' 4     |   5   '   5   '   5   |   5   '   6   ' 4     |  
    |       '       ' 7   9 |     9 '     9 '     9 |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end lone representatives method ----

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Found and set 0 cells this lone representatives search pass.

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Imaginary value of 3 found in Box 3 all in row 2...   removing it from the cell ( 2, 1, 1 ).
Imaginary value of 3 found in Box 3 all in row 2...   removing it from the cell ( 2, 4, 2 ).
Imaginary value of 3 found in Box 3 all in row 2...   removing it from the cell ( 2, 6, 2 ).
Imaginary value of 9 found in Box 3 all in row 2...   removing it from the cell ( 2, 1, 1 ).
Imaginary value of 9 found in Box 3 all in row 2...   removing it from the cell ( 2, 3, 1 ).
Imaginary value of 9 found in Box 3 all in row 2...   removing it from the cell ( 2, 4, 2 ).
Imaginary value of 9 found in Box 3 all in row 2...   removing it from the cell ( 2, 6, 2 ).
Imaginary value of 7 found in Box 7 all in col 3...   removing it from the cell ( 1, 3, 1 ).
Imaginary value of 7 found in Box 7 all in col 3...   removing it from the cell ( 3, 3, 1 ).
Imaginary value of 7 found in Box 7 all in col 3...   removing it from the cell ( 5, 3, 4 ).
Imaginary value of 7 found in Box 7 all in col 3...   removing it from the cell ( 6, 3, 4 ).
Found and removed 11 possible values from cells via imaginary numbers.

So far we filled this many cells: 21
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '       '       |   2 3 '   2 3 '   2 3 |       '       '       |  
  1 | 4     ' 4     ' 4     |       ' 4     ' 4     |   6   '   1   '   5   |  
    | 7   9 ' 7 8 9 '   8 9 | 7 8 9 '   8 9 ' 7   9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     |       '       ' 1     |       '     3 '     3 |  
  2 | 4 5   '   2   ' 4 5   |   5   '   6   ' 4 5   |   7   '       '       |  
    |       '       '   8   |   8   '       '       |       '     9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 ' 1     ' 1     |     3 ' 1   3 ' 1   3 |       '       '       |  
  3 |   5 6 '     6 '   5 6 |   5   '   5   '   5   |   4   '   2   '   8   |  
    | 7   9 ' 7   9 '     9 | 7   9 '     9 ' 7   9 |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   ' 1     '       |   2   '   2   '   2   |       '       ' 1 2   |  
  4 | 4 5 6 ' 4   6 '   3   |   5 6 ' 4 5   ' 4 5 6 |   9   ' 4 5   ' 4   6 |  
    | 7     ' 7 8   '       | 7     '       ' 7     |       ' 7 8   ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |       '   2 3 '   2 3 |   2   '     3 '   2 3 |  
  5 | 4 5 6 ' 4   6 ' 4 5 6 |   1   ' 4 5   ' 4 5 6 |   5   ' 4 5   ' 4   6 |  
    | 7   9 ' 7 8 9 '   8 9 |       '     9 ' 7   9 |   8   ' 7 8   ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   ' 1     ' 1 2   |   2 3 '   2 3 '       | 1 2   '     3 ' 1 2 3 |  
  6 | 4 5 6 ' 4   6 ' 4 5 6 |   5 6 ' 4 5   '   8   |   5   ' 4 5   ' 4   6 |  
    | 7   9 ' 7   9 '     9 | 7   9 '     9 '       |       ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '   2   |       '   2 3 '   2 3 |   2   '       '   2   |  
  7 |   1   '   5   '     6 |   4   '       '     6 |       '       '       |  
    |       '       ' 7   9 |       '   8 9 '     9 |   8   ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |   2   '       ' 1 2   |       '       ' 1 2   |  
  8 | 4   6 ' 4   6 ' 4   6 |   5 6 '   7   '   5 6 |   3   ' 4 5   ' 4     |  
    |     9 '     9 '     9 |   8 9 '       '     9 |       '   8 9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '   2   |   2   ' 1 2   ' 1 2   | 1 2   '       ' 1 2   |  
  9 |   8   '   3   ' 4     |   5   '   5   '   5   |   5   '   6   ' 4     |  
    |       '       ' 7   9 |     9 '     9 '     9 |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
---- end imaginary values method ----

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Found and removed 0 possible values from cells via imaginary numbers.

Looking for Naked Pairs, any two cells with the same
pair of possible values that exist in the same cluster [row column or box]):
Found and processed 0 naked pairs.

Looking for Hidden Pairs, (any two candidate values which exist 
only in the same two cells in a given cluster):
---- find_hidden_pairs: Start all possibility counts ------
2 col6:1
4 col6:2
3 col6:5
2 col6:8
---- find_hidden_pairs: End   all possibility counts ------
Hidden pair (box): comparing candadate values box2:3 and box2:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (box): comparing candadate values box7:3 and box7:8.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row1:1 and row1:3.
Hidden pair (row): comparing candadate values row1:1 and row1:8.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row1:1 and row1:9.
Hidden pair (row): comparing candadate values row1:3 and row1:8.
Hidden pair (row): comparing candadate values row1:3 and row1:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row1:8 and row1:9.
Hidden pair (row): comparing candadate values row3:1 and row3:8.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row6:3 and row6:6.
Hidden pair (row): comparing candadate values row7:1 and row7:8.
Hidden pair (row): comparing candadate values row8:4 and row8:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): processing fist cell: candidate value 2?
Hidden pair (row): processing fist cell: Remove it!
Hidden pair (row): processing fist cell: candidate value 4?
Hidden pair (row): processing fist cell: candidate value 7?
Hidden pair (row): processing fist cell: candidate value 9?
Hidden pair (row): processing fist cell: Remove it!
Removed all other candidate values from first cell.
Removed all other candidate values from second cell.
Hidden pair (col): comparing candadate values col4:1 and col4:8.
Hidden pair (col): comparing candadate values col6:1 and col6:8.
Found and processed 0 hidden pairs.

==== End Pass 1 (progress is 15) ====
==== Pass 2 ====
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '       '       |   2 3 '   2 3 '   2 3 |       '       '       |  
  1 | 4     ' 4     ' 4     |       ' 4     ' 4     |   6   '   1   '   5   |  
    | 7   9 ' 7 8 9 '   8 9 | 7 8 9 '   8 9 ' 7   9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     |       '       ' 1     |       '     3 '     3 |  
  2 | 4 5   '   2   ' 4 5   |   5   '   6   ' 4 5   |   7   '       '       |  
    |       '       '   8   |   8   '       '       |       '     9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 ' 1     ' 1     |     3 ' 1   3 ' 1   3 |       '       '       |  
  3 |   5 6 '     6 '   5 6 |   5   '   5   '   5   |   4   '   2   '   8   |  
    | 7   9 ' 7   9 '     9 | 7   9 '     9 ' 7   9 |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   ' 1     '       |   2   '   2   '   2   |       '       ' 1 2   |  
  4 | 4 5 6 ' 4   6 '   3   |   5 6 ' 4 5   ' 4 5 6 |   9   ' 4 5   ' 4   6 |  
    | 7     ' 7 8   '       | 7     '       ' 7     |       ' 7 8   ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |       '   2 3 '   2 3 |   2   '     3 '   2 3 |  
  5 | 4 5 6 ' 4   6 ' 4 5 6 |   1   ' 4 5   ' 4 5 6 |   5   ' 4 5   ' 4   6 |  
    | 7   9 ' 7 8 9 '   8 9 |       '     9 ' 7   9 |   8   ' 7 8   ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   ' 1     ' 1 2   |   2 3 '   2 3 '       | 1 2   '     3 ' 1 2 3 |  
  6 | 4 5 6 ' 4   6 ' 4 5 6 |   5 6 ' 4 5   '   8   |   5   ' 4 5   ' 4   6 |  
    | 7   9 ' 7   9 '     9 | 7   9 '     9 '       |       ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '   2   |       '   2 3 '   2 3 |   2   '       '   2   |  
  7 |   1   '   5   '     6 |   4   '       '     6 |       '       '       |  
    |       '       ' 7   9 |       '   8 9 '     9 |   8   ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |   2   '       ' 1 2   |       '       ' 1 2   |  
  8 | 4   6 ' 4   6 ' 4   6 |   5 6 '   7   '   5 6 |   3   ' 4 5   ' 4     |  
    |     9 '     9 '     9 |   8 9 '       '     9 |       '   8 9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |   2   ' 1 2   ' 1 2   | 1 2   '       ' 1 2   |  
  9 |   8   '   3   ' 4     |   5   '   5   '   5   |   5   '   6   ' 4     |  
    |       '       ' 7     |     9 '     9 '     9 |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
Looking for Singletons (cells with only one possible value left) :
Found and set 0 cells this singletons search pass.

Looking for Lone representatives (possible value's present in only one cell of a cluster [row column or box]):
Found and set 0 cells this lone representatives search pass.

Looking for Imaginary Values (all 2 or 3 representatives of a given value in a cluster share all belong to another cluster):
Found and removed 0 possible values from cells via imaginary numbers.

Looking for Naked Pairs, any two cells with the same
pair of possible values that exist in the same cluster [row column or box]):
Found and processed 0 naked pairs.

Looking for Hidden Pairs, (any two candidate values which exist 
only in the same two cells in a given cluster):
---- find_hidden_pairs: Start all possibility counts ------
2 col6:1
4 col6:2
3 col6:5
2 col6:8
---- find_hidden_pairs: End   all possibility counts ------
Hidden pair (box): comparing candadate values box2:3 and box2:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (box): comparing candadate values box7:3 and box7:8.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row1:1 and row1:3.
Hidden pair (row): comparing candadate values row1:1 and row1:8.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row1:1 and row1:9.
Hidden pair (row): comparing candadate values row1:3 and row1:8.
Hidden pair (row): comparing candadate values row1:3 and row1:9.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Hidden pair (row): comparing candadate values row1:8 and row1:9.
Hidden pair (row): comparing candadate values row3:1 and row3:8.
Two candidate values shared first cell.
Hidden pair (row): comparing candadate values row6:3 and row6:6.
Hidden pair (row): comparing candadate values row7:1 and row7:8.
Hidden pair (row): comparing candadate values row8:4 and row8:7.
Two candidate values shared first cell.
Two candidate values shared second cell!  We have a pair.
Removed all other candidate values from second cell.
Hidden pair (col): comparing candadate values col4:1 and col4:8.
Hidden pair (col): comparing candadate values col6:1 and col6:8.
Found and processed 0 hidden pairs.

==== End Pass 2 (progress is 0) ====
We were able to determine 21 cells.
                                                                               
        1       2       3       4       5       6       7       8       9      
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |     3 '       '       |   2 3 '   2 3 '   2 3 |       '       '       |  
  1 | 4     ' 4     ' 4     |       ' 4     ' 4     |   6   '   1   '   5   |  
    | 7   9 ' 7 8 9 '   8 9 | 7 8 9 '   8 9 ' 7   9 |       '       '       |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       ' 1     |       '       ' 1     |       '     3 '     3 |  
  2 | 4 5   '   2   ' 4 5   |   5   '   6   ' 4 5   |   7   '       '       |  
    |       '       '   8   |   8   '       '       |       '     9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |     3 ' 1     ' 1     |     3 ' 1   3 ' 1   3 |       '       '       |  
  3 |   5 6 '     6 '   5 6 |   5   '   5   '   5   |   4   '   2   '   8   |  
    | 7   9 ' 7   9 '     9 | 7   9 '     9 ' 7   9 |       '       '       |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |   2   ' 1     '       |   2   '   2   '   2   |       '       ' 1 2   |  
  4 | 4 5 6 ' 4   6 '   3   |   5 6 ' 4 5   ' 4 5 6 |   9   ' 4 5   ' 4   6 |  
    | 7     ' 7 8   '       | 7     '       ' 7     |       ' 7 8   ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |       '   2 3 '   2 3 |   2   '     3 '   2 3 |  
  5 | 4 5 6 ' 4   6 ' 4 5 6 |   1   ' 4 5   ' 4 5 6 |   5   ' 4 5   ' 4   6 |  
    | 7   9 ' 7 8 9 '   8 9 |       '     9 ' 7   9 |   8   ' 7 8   ' 7     |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   ' 1     ' 1 2   |   2 3 '   2 3 '       | 1 2   '     3 ' 1 2 3 |  
  6 | 4 5 6 ' 4   6 ' 4 5 6 |   5 6 ' 4 5   '   8   |   5   ' 4 5   ' 4   6 |  
    | 7   9 ' 7   9 '     9 | 7   9 '     9 '       |       ' 7     ' 7     |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
    |       '       '   2   |       '   2 3 '   2 3 |   2   '       '   2   |  
  7 |   1   '   5   '     6 |   4   '       '     6 |       '       '       |  
    |       '       ' 7   9 |       '   8 9 '     9 |   8   ' 7 8 9 ' 7   9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |   2   '       '   2   |   2   '       ' 1 2   |       '       ' 1 2   |  
  8 | 4   6 ' 4   6 ' 4   6 |   5 6 '   7   '   5 6 |   3   ' 4 5   ' 4     |  
    |     9 '     9 '     9 |   8 9 '       '     9 |       '   8 9 '     9 |  
    + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- + ----- +  
    |       '       '       |   2   ' 1 2   ' 1 2   | 1 2   '       ' 1 2   |  
  9 |   8   '   3   ' 4     |   5   '   5   '   5   |   5   '   6   ' 4     |  
    |       '       ' 7     |     9 '     9 '     9 |       '       ' 7   9 |  
    +-------+-------+-------+-------+-------+-------+-------+-------+-------+  
